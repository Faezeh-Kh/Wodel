/*
 * generated by Xtext 2.12.0
 */
package wodeledu.dsls.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import wodeledu.dsls.ide.contentassist.antlr.internal.InternalMutaTextParser;
import wodeledu.dsls.services.MutaTextGrammarAccess;

public class MutaTextParser extends AbstractContentAssistParser {

	@Inject
	private MutaTextGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalMutaTextParser createParser() {
		InternalMutaTextParser result = new InternalMutaTextParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getWordAccess().getAlternatives(), "rule__Word__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getVariableTypeAccess().getAlternatives(), "rule__VariableType__Alternatives");
					put(grammarAccess.getConfigurationAccess().getGroup(), "rule__Configuration__Group__0");
					put(grammarAccess.getConfigurationAccess().getGroup_3(), "rule__Configuration__Group_3__0");
					put(grammarAccess.getOptionAccess().getGroup(), "rule__Option__Group__0");
					put(grammarAccess.getOptionAccess().getGroup_3(), "rule__Option__Group_3__0");
					put(grammarAccess.getTextAccess().getGroup(), "rule__Text__Group__0");
					put(grammarAccess.getTextAccess().getGroup_1(), "rule__Text__Group_1__0");
					put(grammarAccess.getConstantAccess().getGroup(), "rule__Constant__Group__0");
					put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
					put(grammarAccess.getConfigurationAccess().getMetamodelAssignment_2(), "rule__Configuration__MetamodelAssignment_2");
					put(grammarAccess.getConfigurationAccess().getOptionsAssignment_3_0(), "rule__Configuration__OptionsAssignment_3_0");
					put(grammarAccess.getConfigurationAccess().getOptionsAssignment_3_1(), "rule__Configuration__OptionsAssignment_3_1");
					put(grammarAccess.getOptionAccess().getTypeAssignment_2(), "rule__Option__TypeAssignment_2");
					put(grammarAccess.getOptionAccess().getObjectAssignment_3_1(), "rule__Option__ObjectAssignment_3_1");
					put(grammarAccess.getOptionAccess().getValidAssignment_5(), "rule__Option__ValidAssignment_5");
					put(grammarAccess.getOptionAccess().getInvalidAssignment_7(), "rule__Option__InvalidAssignment_7");
					put(grammarAccess.getTextAccess().getWordsAssignment_1_0(), "rule__Text__WordsAssignment_1_0");
					put(grammarAccess.getTextAccess().getWordsAssignment_1_1(), "rule__Text__WordsAssignment_1_1");
					put(grammarAccess.getConstantAccess().getValueAssignment_1(), "rule__Constant__ValueAssignment_1");
					put(grammarAccess.getVariableAccess().getTypeAssignment_1(), "rule__Variable__TypeAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MutaTextGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MutaTextGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
