/**
 * generated by Xtext
 */
package wodeledu.dsls.scoping;

import edutest.MutatorTests;
import java.net.URL;
import java.util.ArrayList;
import manager.ModelManager;
import manager.WodelContext;
import mutatorenvironment.Block;
import org.eclipse.core.runtime.FileLocator;
import org.eclipse.core.runtime.Platform;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.osgi.framework.Bundle;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
@SuppressWarnings("all")
public class EduTestScopeProvider extends AbstractDeclarativeScopeProvider {
  /**
   * MutatorTests.block can refers to any block declared in the .mutator file.
   */
  public IScope scope_MutatorTests_block(final MutatorTests mts, final EReference ref) {
    try {
      IScope _xblockexpression = null;
      {
        String _workspaceAbsolutePath = ModelManager.getWorkspaceAbsolutePath();
        String _plus = ("file:/" + _workspaceAbsolutePath);
        String _plus_1 = (_plus + "/");
        String _project = WodelContext.getProject();
        String _plus_2 = (_plus_1 + _project);
        String _plus_3 = (_plus_2 + "/");
        String _outputFolder = ModelManager.getOutputFolder();
        String _plus_4 = (_plus_3 + _outputFolder);
        String _plus_5 = (_plus_4 + "/");
        Resource _eResource = mts.eResource();
        URI _uRI = _eResource.getURI();
        String _lastSegment = _uRI.lastSegment();
        String _replaceAll = _lastSegment.replaceAll("test", "model");
        final String xmiFileName = (_plus_5 + _replaceAll);
        final Bundle bundle = Platform.getBundle("wodel.models");
        final URL fileURL = bundle.getEntry("/models/MutatorEnvironment.ecore");
        URL _resolve = FileLocator.resolve(fileURL);
        final String ecore = _resolve.getFile();
        final ArrayList<EPackage> mutatorpackages = ModelManager.loadMetaModel(ecore);
        URI _createURI = URI.createURI(xmiFileName);
        String _fileString = _createURI.toFileString();
        final Resource mutatormodel = ModelManager.loadModel(mutatorpackages, _fileString);
        final ArrayList<EObject> eobjects = ModelManager.getObjectsOfType("Block", mutatormodel);
        ArrayList<Block> blocks = null;
        for (final EObject eobject : eobjects) {
          blocks.add(((Block) eobject));
        }
        _xblockexpression = Scopes.scopeFor(blocks);
      }
      return _xblockexpression;
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
