// automatically generated by Xtext
grammar org.mutatorgraph.MutatorGraph with org.eclipse.xtext.common.Terminals

import "http://mutatorgraph/1.0" 
//import "platform:/resource/MutProgram/models/MutatorGraph.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

MutatorGraph returns MutatorGraph:
	{MutatorGraph}
	'metamodel' metamodel=EString
	name=[ecore::EClass|ID] '->' type=GraphType
	'{'
	(nodes+=Node)*
	(edges+=Edge)*
	'}'	
;

EString returns ecore::EString:
	STRING | ID;

enum GraphType returns GraphType:
	diagram = 'diagram';

Node returns Node:
	{Node}
	name=[ecore::EClass|ID] '(' (negation=Negation)? attribute=[ecore::EAttribute|ID] ')' '->' type=NodeType (',' 'shape' '=' shape=NodeShape)?
;

Edge returns Edge:
	{Edge}
	name=[ecore::EClass|ID] '(' source=[ecore::EReference|ID] ',' target=[ecore::EReference|ID] ')' '->' 'edge' ',' 'label' '=' label=[ecore::EReference|ID]
;

enum Negation returns Negation:
				not = 'not' | yes = 'yes';

enum NodeType returns NodeType:
				node = 'node' | markednode = 'markednode';

enum NodeShape returns NodeShape:
				circle = 'circle' | doublecircle = 'doublecircle';
