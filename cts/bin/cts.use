model cts
class PFSM
	attributes
		name : String
end
class AlphabetSymbol
	attributes
		symbol : String
end
class State
	attributes
		name : String
		isInitial : Boolean
		isFinal : Boolean
end
class Transition
	attributes
		probability : Real
end
class Dummy
end
composition PFSMState between
	PFSM[*] role pfsmstate
	State[*] role states_
end
composition PFSMTransition between
	PFSM[*] role pfsmtransition
	Transition[*] role transitions_
end
composition PFSMAlphabetSymbol between
	PFSM[*] role pfsmalphabetsymbol
	AlphabetSymbol[*] role alphabet
end
association TransitionState between
	Transition[*] role transitionstate
	State[1] role src
end
association TransitionState1 between
	Transition[*] role transitionstate1
	State[1] role tar
end
association TransitionAlphabetSymbol between
	Transition[*] role transitionalphabetsymbol
	AlphabetSymbol[1] role input
end
association TransitionAlphabetSymbol1 between
	Transition[*] role transitionalphabetsymbol1
	AlphabetSymbol[1] role output
end
constraints
context Dummy
inv mut1 : PFSM.allInstances()->forAll(p | p.name <> null)
inv mut2 : AlphabetSymbol.allInstances()->forAll(a | a.symbol <> null)
inv mut3 : State.allInstances()->forAll(s | s.name <> null)
inv mut4 : State.allInstances()->forAll(s | s.isInitial <> null)
inv mut5 : State.allInstances()->forAll(s | s.isFinal <> null)
inv mut6 : Transition.allInstances()->forAll(t | t.probability <> null)
inv mut7 : Transition.allInstances()->size() > 0
inv mut8 : State.allInstances()->size() > 1
inv mut9 : State.allInstances()->exists(s | s.isFinal = true)
inv mut10 : State.allInstances()->one(s | s.isInitial = true)
inv mut11 : AlphabetSymbol.allInstances()->forAll(a1,a2 |a1.symbol=a2.symbol implies a1=a2)
