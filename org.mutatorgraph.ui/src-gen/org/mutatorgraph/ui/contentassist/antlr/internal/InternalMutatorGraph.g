/*
 * generated by Xtext
 */
grammar InternalMutatorGraph;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.mutatorgraph.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.mutatorgraph.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.mutatorgraph.services.MutatorGraphGrammarAccess;

}

@parser::members {
 
 	private MutatorGraphGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MutatorGraphGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMutatorGraph
entryRuleMutatorGraph 
:
{ before(grammarAccess.getMutatorGraphRule()); }
	 ruleMutatorGraph
{ after(grammarAccess.getMutatorGraphRule()); } 
	 EOF 
;

// Rule MutatorGraph
ruleMutatorGraph
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMutatorGraphAccess().getGroup()); }
(rule__MutatorGraph__Group__0)
{ after(grammarAccess.getMutatorGraphAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNode
entryRuleNode 
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeAccess().getGroup()); }
(rule__Node__Group__0)
{ after(grammarAccess.getNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEdge
entryRuleEdge 
:
{ before(grammarAccess.getEdgeRule()); }
	 ruleEdge
{ after(grammarAccess.getEdgeRule()); } 
	 EOF 
;

// Rule Edge
ruleEdge
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEdgeAccess().getGroup()); }
(rule__Edge__Group__0)
{ after(grammarAccess.getEdgeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule GraphType
ruleGraphType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphTypeAccess().getDiagramEnumLiteralDeclaration()); }
(	'diagram' 
)
{ after(grammarAccess.getGraphTypeAccess().getDiagramEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Negation
ruleNegation
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getAlternatives()); }
(rule__Negation__Alternatives)
{ after(grammarAccess.getNegationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule NodeType
ruleNodeType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeAccess().getAlternatives()); }
(rule__NodeType__Alternatives)
{ after(grammarAccess.getNodeTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule NodeShape
ruleNodeShape
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeShapeAccess().getAlternatives()); }
(rule__NodeShape__Alternatives)
{ after(grammarAccess.getNodeShapeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getNotEnumLiteralDeclaration_0()); }
(	'not' 
)
{ after(grammarAccess.getNegationAccess().getNotEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getNegationAccess().getYesEnumLiteralDeclaration_1()); }
(	'yes' 
)
{ after(grammarAccess.getNegationAccess().getYesEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeAccess().getNodeEnumLiteralDeclaration_0()); }
(	'node' 
)
{ after(grammarAccess.getNodeTypeAccess().getNodeEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getNodeTypeAccess().getMarkednodeEnumLiteralDeclaration_1()); }
(	'markednode' 
)
{ after(grammarAccess.getNodeTypeAccess().getMarkednodeEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeShape__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeShapeAccess().getCircleEnumLiteralDeclaration_0()); }
(	'circle' 
)
{ after(grammarAccess.getNodeShapeAccess().getCircleEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getNodeShapeAccess().getDoublecircleEnumLiteralDeclaration_1()); }
(	'doublecircle' 
)
{ after(grammarAccess.getNodeShapeAccess().getDoublecircleEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MutatorGraph__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutatorGraph__Group__0__Impl
	rule__MutatorGraph__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getMutatorGraphAction_0()); }
(

)
{ after(grammarAccess.getMutatorGraphAccess().getMutatorGraphAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutatorGraph__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutatorGraph__Group__1__Impl
	rule__MutatorGraph__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getMetamodelKeyword_1()); }

	'metamodel' 

{ after(grammarAccess.getMutatorGraphAccess().getMetamodelKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutatorGraph__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutatorGraph__Group__2__Impl
	rule__MutatorGraph__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getMetamodelAssignment_2()); }
(rule__MutatorGraph__MetamodelAssignment_2)
{ after(grammarAccess.getMutatorGraphAccess().getMetamodelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutatorGraph__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutatorGraph__Group__3__Impl
	rule__MutatorGraph__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getNameAssignment_3()); }
(rule__MutatorGraph__NameAssignment_3)
{ after(grammarAccess.getMutatorGraphAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutatorGraph__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutatorGraph__Group__4__Impl
	rule__MutatorGraph__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getHyphenMinusGreaterThanSignKeyword_4()); }

	'->' 

{ after(grammarAccess.getMutatorGraphAccess().getHyphenMinusGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutatorGraph__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutatorGraph__Group__5__Impl
	rule__MutatorGraph__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getTypeAssignment_5()); }
(rule__MutatorGraph__TypeAssignment_5)
{ after(grammarAccess.getMutatorGraphAccess().getTypeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutatorGraph__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutatorGraph__Group__6__Impl
	rule__MutatorGraph__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getMutatorGraphAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutatorGraph__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutatorGraph__Group__7__Impl
	rule__MutatorGraph__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getNodesAssignment_7()); }
(rule__MutatorGraph__NodesAssignment_7)*
{ after(grammarAccess.getMutatorGraphAccess().getNodesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutatorGraph__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutatorGraph__Group__8__Impl
	rule__MutatorGraph__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getEdgesAssignment_8()); }
(rule__MutatorGraph__EdgesAssignment_8)*
{ after(grammarAccess.getMutatorGraphAccess().getEdgesAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutatorGraph__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutatorGraph__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getMutatorGraphAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Node__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNodeAction_0()); }
(

)
{ after(grammarAccess.getNodeAccess().getNodeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__1__Impl
	rule__Node__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNameAssignment_1()); }
(rule__Node__NameAssignment_1)
{ after(grammarAccess.getNodeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__2__Impl
	rule__Node__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getNodeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__3__Impl
	rule__Node__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNegationAssignment_3()); }
(rule__Node__NegationAssignment_3)?
{ after(grammarAccess.getNodeAccess().getNegationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__4__Impl
	rule__Node__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getAttributeAssignment_4()); }
(rule__Node__AttributeAssignment_4)
{ after(grammarAccess.getNodeAccess().getAttributeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__5__Impl
	rule__Node__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getNodeAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__6__Impl
	rule__Node__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getHyphenMinusGreaterThanSignKeyword_6()); }

	'->' 

{ after(grammarAccess.getNodeAccess().getHyphenMinusGreaterThanSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__7__Impl
	rule__Node__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getTypeAssignment_7()); }
(rule__Node__TypeAssignment_7)
{ after(grammarAccess.getNodeAccess().getTypeAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getGroup_8()); }
(rule__Node__Group_8__0)?
{ after(grammarAccess.getNodeAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Node__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_8__0__Impl
	rule__Node__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getCommaKeyword_8_0()); }

	',' 

{ after(grammarAccess.getNodeAccess().getCommaKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_8__1__Impl
	rule__Node__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getShapeKeyword_8_1()); }

	'shape' 

{ after(grammarAccess.getNodeAccess().getShapeKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_8__2__Impl
	rule__Node__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getEqualsSignKeyword_8_2()); }

	'=' 

{ after(grammarAccess.getNodeAccess().getEqualsSignKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getShapeAssignment_8_3()); }
(rule__Node__ShapeAssignment_8_3)
{ after(grammarAccess.getNodeAccess().getShapeAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Edge__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__0__Impl
	rule__Edge__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEdgeAction_0()); }
(

)
{ after(grammarAccess.getEdgeAccess().getEdgeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__1__Impl
	rule__Edge__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getNameAssignment_1()); }
(rule__Edge__NameAssignment_1)
{ after(grammarAccess.getEdgeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__2__Impl
	rule__Edge__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getEdgeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__3__Impl
	rule__Edge__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSourceAssignment_3()); }
(rule__Edge__SourceAssignment_3)
{ after(grammarAccess.getEdgeAccess().getSourceAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__4__Impl
	rule__Edge__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getEdgeAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__5__Impl
	rule__Edge__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getTargetAssignment_5()); }
(rule__Edge__TargetAssignment_5)
{ after(grammarAccess.getEdgeAccess().getTargetAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__6__Impl
	rule__Edge__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getEdgeAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__7__Impl
	rule__Edge__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getHyphenMinusGreaterThanSignKeyword_7()); }

	'->' 

{ after(grammarAccess.getEdgeAccess().getHyphenMinusGreaterThanSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__8__Impl
	rule__Edge__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEdgeKeyword_8()); }

	'edge' 

{ after(grammarAccess.getEdgeAccess().getEdgeKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__9__Impl
	rule__Edge__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getCommaKeyword_9()); }

	',' 

{ after(grammarAccess.getEdgeAccess().getCommaKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__10__Impl
	rule__Edge__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelKeyword_10()); }

	'label' 

{ after(grammarAccess.getEdgeAccess().getLabelKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__11__Impl
	rule__Edge__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getEqualsSignKeyword_11()); }

	'=' 

{ after(grammarAccess.getEdgeAccess().getEqualsSignKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Edge__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelAssignment_12()); }
(rule__Edge__LabelAssignment_12)
{ after(grammarAccess.getEdgeAccess().getLabelAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}





























rule__MutatorGraph__MetamodelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getMetamodelEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getMutatorGraphAccess().getMetamodelEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getNameEClassCrossReference_3_0()); }
(
{ before(grammarAccess.getMutatorGraphAccess().getNameEClassIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getMutatorGraphAccess().getNameEClassIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getMutatorGraphAccess().getNameEClassCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__TypeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getTypeGraphTypeEnumRuleCall_5_0()); }
	ruleGraphType{ after(grammarAccess.getMutatorGraphAccess().getTypeGraphTypeEnumRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__NodesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getNodesNodeParserRuleCall_7_0()); }
	ruleNode{ after(grammarAccess.getMutatorGraphAccess().getNodesNodeParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MutatorGraph__EdgesAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutatorGraphAccess().getEdgesEdgeParserRuleCall_8_0()); }
	ruleEdge{ after(grammarAccess.getMutatorGraphAccess().getEdgesEdgeParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNameEClassCrossReference_1_0()); }
(
{ before(grammarAccess.getNodeAccess().getNameEClassIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNodeAccess().getNameEClassIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getNodeAccess().getNameEClassCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NegationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNegationNegationEnumRuleCall_3_0()); }
	ruleNegation{ after(grammarAccess.getNodeAccess().getNegationNegationEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__AttributeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getAttributeEAttributeCrossReference_4_0()); }
(
{ before(grammarAccess.getNodeAccess().getAttributeEAttributeIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getNodeAccess().getAttributeEAttributeIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getNodeAccess().getAttributeEAttributeCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__TypeAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getTypeNodeTypeEnumRuleCall_7_0()); }
	ruleNodeType{ after(grammarAccess.getNodeAccess().getTypeNodeTypeEnumRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__ShapeAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getShapeNodeShapeEnumRuleCall_8_3_0()); }
	ruleNodeShape{ after(grammarAccess.getNodeAccess().getShapeNodeShapeEnumRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getNameEClassCrossReference_1_0()); }
(
{ before(grammarAccess.getEdgeAccess().getNameEClassIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEdgeAccess().getNameEClassIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getEdgeAccess().getNameEClassCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__SourceAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getSourceEReferenceCrossReference_3_0()); }
(
{ before(grammarAccess.getEdgeAccess().getSourceEReferenceIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getEdgeAccess().getSourceEReferenceIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getEdgeAccess().getSourceEReferenceCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__TargetAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getTargetEReferenceCrossReference_5_0()); }
(
{ before(grammarAccess.getEdgeAccess().getTargetEReferenceIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getEdgeAccess().getTargetEReferenceIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getEdgeAccess().getTargetEReferenceCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__LabelAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeAccess().getLabelEReferenceCrossReference_12_0()); }
(
{ before(grammarAccess.getEdgeAccess().getLabelEReferenceIDTerminalRuleCall_12_0_1()); }
	RULE_ID{ after(grammarAccess.getEdgeAccess().getLabelEReferenceIDTerminalRuleCall_12_0_1()); }
)
{ after(grammarAccess.getEdgeAccess().getLabelEReferenceCrossReference_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


