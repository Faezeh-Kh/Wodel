/**
 */
package mutatorenvironment.provider;

import java.util.ArrayList;
import java.util.Collection;
import mutatorenvironment.util.MutatorenvironmentAdapterFactory;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class MutatorenvironmentItemProviderAdapterFactory extends MutatorenvironmentAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MutatorenvironmentItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.MutatorEnvironment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MutatorEnvironmentItemProvider mutatorEnvironmentItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.MutatorEnvironment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMutatorEnvironmentAdapter() {
		if (mutatorEnvironmentItemProvider == null) {
			mutatorEnvironmentItemProvider = new MutatorEnvironmentItemProvider(this);
		}

		return mutatorEnvironmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.Library} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LibraryItemProvider libraryItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.Library}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLibraryAdapter() {
		if (libraryItemProvider == null) {
			libraryItemProvider = new LibraryItemProvider(this);
		}

		return libraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.Program} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProgramItemProvider programItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.Program}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProgramAdapter() {
		if (programItemProvider == null) {
			programItemProvider = new ProgramItemProvider(this);
		}

		return programItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.CompositeMutator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeMutatorItemProvider compositeMutatorItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.CompositeMutator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeMutatorAdapter() {
		if (compositeMutatorItemProvider == null) {
			compositeMutatorItemProvider = new CompositeMutatorItemProvider(this);
		}

		return compositeMutatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.Load} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoadItemProvider loadItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.Load}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoadAdapter() {
		if (loadItemProvider == null) {
			loadItemProvider = new LoadItemProvider(this);
		}

		return loadItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.CreateObjectMutator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CreateObjectMutatorItemProvider createObjectMutatorItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.CreateObjectMutator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCreateObjectMutatorAdapter() {
		if (createObjectMutatorItemProvider == null) {
			createObjectMutatorItemProvider = new CreateObjectMutatorItemProvider(this);
		}

		return createObjectMutatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.RandomTypeSelection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RandomTypeSelectionItemProvider randomTypeSelectionItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.RandomTypeSelection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRandomTypeSelectionAdapter() {
		if (randomTypeSelectionItemProvider == null) {
			randomTypeSelectionItemProvider = new RandomTypeSelectionItemProvider(this);
		}

		return randomTypeSelectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.SpecificObjectSelection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecificObjectSelectionItemProvider specificObjectSelectionItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.SpecificObjectSelection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecificObjectSelectionAdapter() {
		if (specificObjectSelectionItemProvider == null) {
			specificObjectSelectionItemProvider = new SpecificObjectSelectionItemProvider(this);
		}

		return specificObjectSelectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.AttributeInit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeInitItemProvider attributeInitItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.AttributeInit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeInitAdapter() {
		if (attributeInitItemProvider == null) {
			attributeInitItemProvider = new AttributeInitItemProvider(this);
		}

		return attributeInitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.SpecificBooleanType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecificBooleanTypeItemProvider specificBooleanTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.SpecificBooleanType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecificBooleanTypeAdapter() {
		if (specificBooleanTypeItemProvider == null) {
			specificBooleanTypeItemProvider = new SpecificBooleanTypeItemProvider(this);
		}

		return specificBooleanTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.RandomBooleanType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RandomBooleanTypeItemProvider randomBooleanTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.RandomBooleanType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRandomBooleanTypeAdapter() {
		if (randomBooleanTypeItemProvider == null) {
			randomBooleanTypeItemProvider = new RandomBooleanTypeItemProvider(this);
		}

		return randomBooleanTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.SpecificStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecificStringTypeItemProvider specificStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.SpecificStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecificStringTypeAdapter() {
		if (specificStringTypeItemProvider == null) {
			specificStringTypeItemProvider = new SpecificStringTypeItemProvider(this);
		}

		return specificStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.RandomStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RandomStringTypeItemProvider randomStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.RandomStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRandomStringTypeAdapter() {
		if (randomStringTypeItemProvider == null) {
			randomStringTypeItemProvider = new RandomStringTypeItemProvider(this);
		}

		return randomStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.SpecificIntegerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecificIntegerTypeItemProvider specificIntegerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.SpecificIntegerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecificIntegerTypeAdapter() {
		if (specificIntegerTypeItemProvider == null) {
			specificIntegerTypeItemProvider = new SpecificIntegerTypeItemProvider(this);
		}

		return specificIntegerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.RandomIntegerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RandomIntegerTypeItemProvider randomIntegerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.RandomIntegerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRandomIntegerTypeAdapter() {
		if (randomIntegerTypeItemProvider == null) {
			randomIntegerTypeItemProvider = new RandomIntegerTypeItemProvider(this);
		}

		return randomIntegerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.SpecificDoubleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecificDoubleTypeItemProvider specificDoubleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.SpecificDoubleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecificDoubleTypeAdapter() {
		if (specificDoubleTypeItemProvider == null) {
			specificDoubleTypeItemProvider = new SpecificDoubleTypeItemProvider(this);
		}

		return specificDoubleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.RandomDoubleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RandomDoubleTypeItemProvider randomDoubleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.RandomDoubleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRandomDoubleTypeAdapter() {
		if (randomDoubleTypeItemProvider == null) {
			randomDoubleTypeItemProvider = new RandomDoubleTypeItemProvider(this);
		}

		return randomDoubleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.ModifySourceReferenceMutator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModifySourceReferenceMutatorItemProvider modifySourceReferenceMutatorItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.ModifySourceReferenceMutator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModifySourceReferenceMutatorAdapter() {
		if (modifySourceReferenceMutatorItemProvider == null) {
			modifySourceReferenceMutatorItemProvider = new ModifySourceReferenceMutatorItemProvider(this);
		}

		return modifySourceReferenceMutatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.SpecificReferenceSelection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecificReferenceSelectionItemProvider specificReferenceSelectionItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.SpecificReferenceSelection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecificReferenceSelectionAdapter() {
		if (specificReferenceSelectionItemProvider == null) {
			specificReferenceSelectionItemProvider = new SpecificReferenceSelectionItemProvider(this);
		}

		return specificReferenceSelectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.ModifyTargetReferenceMutator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModifyTargetReferenceMutatorItemProvider modifyTargetReferenceMutatorItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.ModifyTargetReferenceMutator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModifyTargetReferenceMutatorAdapter() {
		if (modifyTargetReferenceMutatorItemProvider == null) {
			modifyTargetReferenceMutatorItemProvider = new ModifyTargetReferenceMutatorItemProvider(this);
		}

		return modifyTargetReferenceMutatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.CreateReferenceMutator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CreateReferenceMutatorItemProvider createReferenceMutatorItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.CreateReferenceMutator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCreateReferenceMutatorAdapter() {
		if (createReferenceMutatorItemProvider == null) {
			createReferenceMutatorItemProvider = new CreateReferenceMutatorItemProvider(this);
		}

		return createReferenceMutatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.RemoveObjectMutator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveObjectMutatorItemProvider removeObjectMutatorItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.RemoveObjectMutator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveObjectMutatorAdapter() {
		if (removeObjectMutatorItemProvider == null) {
			removeObjectMutatorItemProvider = new RemoveObjectMutatorItemProvider(this);
		}

		return removeObjectMutatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.ModifyInformationMutator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModifyInformationMutatorItemProvider modifyInformationMutatorItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.ModifyInformationMutator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModifyInformationMutatorAdapter() {
		if (modifyInformationMutatorItemProvider == null) {
			modifyInformationMutatorItemProvider = new ModifyInformationMutatorItemProvider(this);
		}

		return modifyInformationMutatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.UpperStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpperStringTypeItemProvider upperStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.UpperStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpperStringTypeAdapter() {
		if (upperStringTypeItemProvider == null) {
			upperStringTypeItemProvider = new UpperStringTypeItemProvider(this);
		}

		return upperStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.LowerStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LowerStringTypeItemProvider lowerStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.LowerStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLowerStringTypeAdapter() {
		if (lowerStringTypeItemProvider == null) {
			lowerStringTypeItemProvider = new LowerStringTypeItemProvider(this);
		}

		return lowerStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.ListStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ListStringTypeItemProvider listStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.ListStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createListStringTypeAdapter() {
		if (listStringTypeItemProvider == null) {
			listStringTypeItemProvider = new ListStringTypeItemProvider(this);
		}

		return listStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.CatStartStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CatStartStringTypeItemProvider catStartStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.CatStartStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCatStartStringTypeAdapter() {
		if (catStartStringTypeItemProvider == null) {
			catStartStringTypeItemProvider = new CatStartStringTypeItemProvider(this);
		}

		return catStartStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.CatEndStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CatEndStringTypeItemProvider catEndStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.CatEndStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCatEndStringTypeAdapter() {
		if (catEndStringTypeItemProvider == null) {
			catEndStringTypeItemProvider = new CatEndStringTypeItemProvider(this);
		}

		return catEndStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.AttributeUnset} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeUnsetItemProvider attributeUnsetItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.AttributeUnset}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeUnsetAdapter() {
		if (attributeUnsetItemProvider == null) {
			attributeUnsetItemProvider = new AttributeUnsetItemProvider(this);
		}

		return attributeUnsetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.AttributeSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeSetItemProvider attributeSetItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.AttributeSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeSetAdapter() {
		if (attributeSetItemProvider == null) {
			attributeSetItemProvider = new AttributeSetItemProvider(this);
		}

		return attributeSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.AttributeSwap} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeSwapItemProvider attributeSwapItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.AttributeSwap}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeSwapAdapter() {
		if (attributeSwapItemProvider == null) {
			attributeSwapItemProvider = new AttributeSwapItemProvider(this);
		}

		return attributeSwapItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.ReplaceStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReplaceStringTypeItemProvider replaceStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.ReplaceStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReplaceStringTypeAdapter() {
		if (replaceStringTypeItemProvider == null) {
			replaceStringTypeItemProvider = new ReplaceStringTypeItemProvider(this);
		}

		return replaceStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.AttributeCopy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeCopyItemProvider attributeCopyItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.AttributeCopy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeCopyAdapter() {
		if (attributeCopyItemProvider == null) {
			attributeCopyItemProvider = new AttributeCopyItemProvider(this);
		}

		return attributeCopyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.RemoveRandomReferenceMutator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveRandomReferenceMutatorItemProvider removeRandomReferenceMutatorItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.RemoveRandomReferenceMutator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveRandomReferenceMutatorAdapter() {
		if (removeRandomReferenceMutatorItemProvider == null) {
			removeRandomReferenceMutatorItemProvider = new RemoveRandomReferenceMutatorItemProvider(this);
		}

		return removeRandomReferenceMutatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.RemoveSpecificReferenceMutator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveSpecificReferenceMutatorItemProvider removeSpecificReferenceMutatorItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.RemoveSpecificReferenceMutator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveSpecificReferenceMutatorAdapter() {
		if (removeSpecificReferenceMutatorItemProvider == null) {
			removeSpecificReferenceMutatorItemProvider = new RemoveSpecificReferenceMutatorItemProvider(this);
		}

		return removeSpecificReferenceMutatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.CompleteSelection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompleteSelectionItemProvider completeSelectionItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.CompleteSelection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompleteSelectionAdapter() {
		if (completeSelectionItemProvider == null) {
			completeSelectionItemProvider = new CompleteSelectionItemProvider(this);
		}

		return completeSelectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.CompleteTypeSelection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompleteTypeSelectionItemProvider completeTypeSelectionItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.CompleteTypeSelection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompleteTypeSelectionAdapter() {
		if (completeTypeSelectionItemProvider == null) {
			completeTypeSelectionItemProvider = new CompleteTypeSelectionItemProvider(this);
		}

		return completeTypeSelectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.RemoveCompleteReferenceMutator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveCompleteReferenceMutatorItemProvider removeCompleteReferenceMutatorItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.RemoveCompleteReferenceMutator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveCompleteReferenceMutatorAdapter() {
		if (removeCompleteReferenceMutatorItemProvider == null) {
			removeCompleteReferenceMutatorItemProvider = new RemoveCompleteReferenceMutatorItemProvider(this);
		}

		return removeCompleteReferenceMutatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.Source} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceItemProvider sourceItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.Source}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceAdapter() {
		if (sourceItemProvider == null) {
			sourceItemProvider = new SourceItemProvider(this);
		}

		return sourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.OtherSelection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OtherSelectionItemProvider otherSelectionItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.OtherSelection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOtherSelectionAdapter() {
		if (otherSelectionItemProvider == null) {
			otherSelectionItemProvider = new OtherSelectionItemProvider(this);
		}

		return otherSelectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.OtherTypeSelection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OtherTypeSelectionItemProvider otherTypeSelectionItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.OtherTypeSelection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOtherTypeSelectionAdapter() {
		if (otherTypeSelectionItemProvider == null) {
			otherTypeSelectionItemProvider = new OtherTypeSelectionItemProvider(this);
		}

		return otherTypeSelectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.SelectObjectMutator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelectObjectMutatorItemProvider selectObjectMutatorItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.SelectObjectMutator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelectObjectMutatorAdapter() {
		if (selectObjectMutatorItemProvider == null) {
			selectObjectMutatorItemProvider = new SelectObjectMutatorItemProvider(this);
		}

		return selectObjectMutatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.AttributeEvaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeEvaluationItemProvider attributeEvaluationItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.AttributeEvaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeEvaluationAdapter() {
		if (attributeEvaluationItemProvider == null) {
			attributeEvaluationItemProvider = new AttributeEvaluationItemProvider(this);
		}

		return attributeEvaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.AttributeReverse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeReverseItemProvider attributeReverseItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.AttributeReverse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeReverseAdapter() {
		if (attributeReverseItemProvider == null) {
			attributeReverseItemProvider = new AttributeReverseItemProvider(this);
		}

		return attributeReverseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.ReferenceSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceSetItemProvider referenceSetItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.ReferenceSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceSetAdapter() {
		if (referenceSetItemProvider == null) {
			referenceSetItemProvider = new ReferenceSetItemProvider(this);
		}

		return referenceSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.ReferenceInit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceInitItemProvider referenceInitItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.ReferenceInit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceInitAdapter() {
		if (referenceInitItemProvider == null) {
			referenceInitItemProvider = new ReferenceInitItemProvider(this);
		}

		return referenceInitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.ReferenceEvaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceEvaluationItemProvider referenceEvaluationItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.ReferenceEvaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceEvaluationAdapter() {
		if (referenceEvaluationItemProvider == null) {
			referenceEvaluationItemProvider = new ReferenceEvaluationItemProvider(this);
		}

		return referenceEvaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.Expression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionItemProvider expressionItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.Expression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionAdapter() {
		if (expressionItemProvider == null) {
			expressionItemProvider = new ExpressionItemProvider(this);
		}

		return expressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.ReferenceSwap} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceSwapItemProvider referenceSwapItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.ReferenceSwap}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceSwapAdapter() {
		if (referenceSwapItemProvider == null) {
			referenceSwapItemProvider = new ReferenceSwapItemProvider(this);
		}

		return referenceSwapItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link mutatorenvironment.BinaryOperator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryOperatorItemProvider binaryOperatorItemProvider;

	/**
	 * This creates an adapter for a {@link mutatorenvironment.BinaryOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryOperatorAdapter() {
		if (binaryOperatorItemProvider == null) {
			binaryOperatorItemProvider = new BinaryOperatorItemProvider(this);
		}

		return binaryOperatorItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (mutatorEnvironmentItemProvider != null) mutatorEnvironmentItemProvider.dispose();
		if (libraryItemProvider != null) libraryItemProvider.dispose();
		if (programItemProvider != null) programItemProvider.dispose();
		if (compositeMutatorItemProvider != null) compositeMutatorItemProvider.dispose();
		if (loadItemProvider != null) loadItemProvider.dispose();
		if (createObjectMutatorItemProvider != null) createObjectMutatorItemProvider.dispose();
		if (randomTypeSelectionItemProvider != null) randomTypeSelectionItemProvider.dispose();
		if (specificObjectSelectionItemProvider != null) specificObjectSelectionItemProvider.dispose();
		if (attributeInitItemProvider != null) attributeInitItemProvider.dispose();
		if (specificBooleanTypeItemProvider != null) specificBooleanTypeItemProvider.dispose();
		if (randomBooleanTypeItemProvider != null) randomBooleanTypeItemProvider.dispose();
		if (specificStringTypeItemProvider != null) specificStringTypeItemProvider.dispose();
		if (randomStringTypeItemProvider != null) randomStringTypeItemProvider.dispose();
		if (specificIntegerTypeItemProvider != null) specificIntegerTypeItemProvider.dispose();
		if (randomIntegerTypeItemProvider != null) randomIntegerTypeItemProvider.dispose();
		if (specificDoubleTypeItemProvider != null) specificDoubleTypeItemProvider.dispose();
		if (randomDoubleTypeItemProvider != null) randomDoubleTypeItemProvider.dispose();
		if (modifySourceReferenceMutatorItemProvider != null) modifySourceReferenceMutatorItemProvider.dispose();
		if (specificReferenceSelectionItemProvider != null) specificReferenceSelectionItemProvider.dispose();
		if (modifyTargetReferenceMutatorItemProvider != null) modifyTargetReferenceMutatorItemProvider.dispose();
		if (createReferenceMutatorItemProvider != null) createReferenceMutatorItemProvider.dispose();
		if (removeObjectMutatorItemProvider != null) removeObjectMutatorItemProvider.dispose();
		if (modifyInformationMutatorItemProvider != null) modifyInformationMutatorItemProvider.dispose();
		if (upperStringTypeItemProvider != null) upperStringTypeItemProvider.dispose();
		if (lowerStringTypeItemProvider != null) lowerStringTypeItemProvider.dispose();
		if (listStringTypeItemProvider != null) listStringTypeItemProvider.dispose();
		if (catStartStringTypeItemProvider != null) catStartStringTypeItemProvider.dispose();
		if (catEndStringTypeItemProvider != null) catEndStringTypeItemProvider.dispose();
		if (attributeUnsetItemProvider != null) attributeUnsetItemProvider.dispose();
		if (attributeSetItemProvider != null) attributeSetItemProvider.dispose();
		if (attributeSwapItemProvider != null) attributeSwapItemProvider.dispose();
		if (replaceStringTypeItemProvider != null) replaceStringTypeItemProvider.dispose();
		if (attributeCopyItemProvider != null) attributeCopyItemProvider.dispose();
		if (removeRandomReferenceMutatorItemProvider != null) removeRandomReferenceMutatorItemProvider.dispose();
		if (removeSpecificReferenceMutatorItemProvider != null) removeSpecificReferenceMutatorItemProvider.dispose();
		if (completeSelectionItemProvider != null) completeSelectionItemProvider.dispose();
		if (completeTypeSelectionItemProvider != null) completeTypeSelectionItemProvider.dispose();
		if (removeCompleteReferenceMutatorItemProvider != null) removeCompleteReferenceMutatorItemProvider.dispose();
		if (sourceItemProvider != null) sourceItemProvider.dispose();
		if (otherSelectionItemProvider != null) otherSelectionItemProvider.dispose();
		if (otherTypeSelectionItemProvider != null) otherTypeSelectionItemProvider.dispose();
		if (selectObjectMutatorItemProvider != null) selectObjectMutatorItemProvider.dispose();
		if (attributeEvaluationItemProvider != null) attributeEvaluationItemProvider.dispose();
		if (attributeReverseItemProvider != null) attributeReverseItemProvider.dispose();
		if (referenceSetItemProvider != null) referenceSetItemProvider.dispose();
		if (referenceInitItemProvider != null) referenceInitItemProvider.dispose();
		if (referenceEvaluationItemProvider != null) referenceEvaluationItemProvider.dispose();
		if (expressionItemProvider != null) expressionItemProvider.dispose();
		if (referenceSwapItemProvider != null) referenceSwapItemProvider.dispose();
		if (binaryOperatorItemProvider != null) binaryOperatorItemProvider.dispose();
	}

}
