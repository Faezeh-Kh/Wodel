/*
 * generated by Xtext
 */
package wodeledu.dsls.validation

import java.util.ArrayList
import org.eclipse.emf.ecore.EPackage
import org.eclipse.xtext.validation.Check
import manager.ModelManager
import exceptions.MetaModelNotFoundException
import modelgraph.MutatorGraph
import java.util.List

//import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class ModelGraphValidator extends AbstractModelGraphValidator {

    public static val INVALID_METAMODEL = 'invalidMetamodel'
    List<EPackage> packages
    String lastMetamodel = '' 
    
    @Check // checks the meta-model
    def checkMutatorGraphMetaModel(MutatorGraph mutatorgraph) {
    	var String path = mutatorgraph.metamodel;
    	try {    		    		
    		if (!lastMetamodel.equals(path)) {
    			lastMetamodel = path
				packages = ModelManager.loadMetaModel(path)				
			}			
		} catch ( MetaModelNotFoundException e ) {
			error(e.toString(), null, INVALID_METAMODEL)
		}
//		var String path = ModelManager.getWorkspaceAbsolutePath+'/'+manager.WodelContext.getProject + '/'
//		try {    		    		
//    		if (!lastMetamodel.equals(path + p.metamodel.substring(1, p.metamodel.length-1))) {
//    			lastMetamodel = path + p.metamodel.substring(1, p.metamodel.length-1)
//				packages = ModelManager.loadMetaModel(path + p.metamodel.substring(1, p.metamodel.length-1))				
//			}			
//		} catch ( MetaModelNotFoundException e ) {
//			error(e.toString(), null, INVALID_METAMODEL)
//		}
    }
}