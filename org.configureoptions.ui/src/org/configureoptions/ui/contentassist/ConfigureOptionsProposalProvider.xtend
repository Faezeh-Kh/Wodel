/*
 * generated by Xtext
 */
package org.configureoptions.ui.contentassist

import org.configureoptions.ui.contentassist.AbstractConfigureOptionsProposalProvider
//import java.util.Set
//import com.google.common.collect.Sets
//import org.eclipse.xtext.Keyword
//import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext
//import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
class ConfigureOptionsProposalProvider extends AbstractConfigureOptionsProposalProvider {

	// override complete_VariableType(EObject model, RuleCall ruleCall, ContentAssistContext context,
	// ICompletionProposalAcceptor acceptor) {
	// for (String keyword : FILTERED_KEYWORDS) {
	// acceptor.accept(createCompletionProposal(keyword, keyword, null, context))
	// }
	// super.complete_VariableType(model, ruleCall, context, acceptor)
	// }
//	val Set<String> FILTERED_KEYWORDS = Sets.newHashSet("%object")
//
//	override completeKeyword(Keyword keyword, ContentAssistContext contentAssistContext,
//		ICompletionProposalAcceptor acceptor) {
//		if (FILTERED_KEYWORDS.contains(keyword.getValue())) {
//			// don't propose keyword
//			return;
//		}
//		super.completeKeyword(keyword, contentAssistContext, acceptor);
//	}

}
