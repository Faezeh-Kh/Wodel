{
  "name": "Wodel",
  "tagline": "A Domain-Specific Language for Model Mutation",
  "body": "**Wodel** is a Domain-Specific Language for the specification and generation of model mutants.\r\n\r\nWodel is domain-independent, as it can be used to generate mutants of models conforming to arbitrary meta-models.\r\n\r\nIt's development environment is extensible, permitting the incorporation of post-processors for different applications.\r\n\r\nAs an example, this repository contains an application consisting on the automated generation of exercises for particular domains\r\n(automata, class diagrams, electronic circuits, etc.). We call this extension **Wodel-Edu**.\r\n\r\nThis is a sample of a Wodel program that mutates a transition target of a Deterministic Finite Automaton model:\r\n\r\n    generate 2 mutants\r\n    in \"out/\"\r\n    from \"model/\"\r\n    metamodel \"http://dfaAutomaton/1.0\"\r\n    \r\n    with commands {\r\n         modify target tar from one Transition to other State\r\n    }\r\n\r\nYou can specify when mutants are going to be generated inside a Wodel program with the _blocks_ directive.\r\n\r\nAlso, you can mutate mutant models generated in a previous block, instead of mutating the seed models.\r\n\r\nFurthermore, you can specify OCL constraints that will apply to the generated mutants:\r\n\r\n    generate mutants\r\n    in \"out/\"\r\n    from \"model/exercise1.model\"\r\n    metamodel \"http://dfaAutomaton/1.0\"\r\n    \r\n    with blocks {\r\n        first {\r\n             modify target tar from one Transition to other State [3]             \r\n\t} [2]\r\n        second from first repeat=no {\r\n             modify one State with { name = random-string(4,6)}\r\n        } [3]\r\n    }\r\n    constraints {\r\n        context State connected: \"isInitial or Set{self}->\r\n                closure(s | Transition.allInstances()->\r\n                select(t | t.tar=s)->collect(src))->exists(s | s.isInitial)\"\r\n    }\r\n\r\nWodel-Edu is an extension to Wodel for the automated generation of exercises. It generates three kinds of exercises:\r\n\r\n* Alternative response: the student has to tell if the diagram is correct or not.\r\n* Multiple choice diagram: the student has to tell which of the shown diagrams is correct.\r\n* Multiple choice emendation: the student has to tell which text options will fix the shown diagram.\r\n\r\nWith this purpose, Wodel-Edu provides 4 DSLs:\r\n\r\n**eduTest**: DSL for the configuration of the web test application, and the definition of the exercises:\r\n\r\n    navigation=free\r\n    MultiChoiceEmendation complex {\r\n        retry=no, weighted=no, penalty=0.0,\r\n        order=options-descending, mode=checkbox\r\n        description for 'exercise4.model' = 'Select the required changes so that\r\n                                             the automaton accepts \"a+b+\"'\r\n        description for 'exercise6.model' = 'Select the required changes so that\r\n                                             the automaton accepts \"a*b+\"?'\r\n    }\r\n    MultiChoiceDiagram simple {\r\n        retry=no\r\n        description for 'exercise8.model' = 'Select which of these automata\r\n                                             accepts \"a*bab*\"'\r\n    }\r\n\r\n**modelGraph**: DSL for the graphical visualization of the models. It uses GraphViz for model renderization:\r\n\r\n    metamodel \"http://dfaAutomaton/1.0\"\r\n    \r\n    Automaton: diagram {\r\n        State(isInitial): markednode\r\n        State(not isFinal): node, shape=circle\r\n        State(isFinal): node, shape=doublecircle\r\n        Transition(src, tar): edge, label=symbol\r\n    }\r\n\r\n**modelText**: DSL for the configuration of the text that identifies the models' elements (optional):\r\n\r\n    metamodel \"http://dfaAutomaton/1.0\"\r\n    \r\n    >State: State %name\r\n    >Transition: Transition %symbol.symbol\r\n    >Transition.tar: target\r\n    >Transition.src: source\r\n\r\n**mutaText**: DSL for the configuration of the text options shown in the multiple choice emendation test exercise format (optional):\r\n\r\n    metamodel \"http://dfaAutomaton/1.0\"\r\n    \r\n    >TargetReferenceChanged: Change %object from %fromObject\r\n                             to %toObject with new %refName %oldToObject /\r\n        Change %object from %fromObject to %oldToObject\r\n                             with new %refName %toObject\r\n    >AttributeChanged: Change attribute %attName from %object\r\n                             with value %newValue to %oldValue /\r\n        Change attribute %attName from %object\r\n                             with value %oldValue to %newValue\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}