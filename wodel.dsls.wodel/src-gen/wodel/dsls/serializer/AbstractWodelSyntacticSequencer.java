/*
 * generated by Xtext
 */
package wodel.dsls.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import wodel.dsls.services.WodelGrammarAccess;

@SuppressWarnings("all")
public abstract class AbstractWodelSyntacticSequencer extends AbstractSyntacticSequencer {

	protected WodelGrammarAccess grammarAccess;
	protected AbstractElementAlias match_CreateObjectMutator___WithKeyword_4_0_LeftCurlyBracketKeyword_4_1_RightCurlyBracketKeyword_4_4__q;
	protected AbstractElementAlias match_ModifyInformationMutator___WithKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_4__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (WodelGrammarAccess) access;
		match_CreateObjectMutator___WithKeyword_4_0_LeftCurlyBracketKeyword_4_1_RightCurlyBracketKeyword_4_4__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getCreateObjectMutatorAccess().getWithKeyword_4_0()), new TokenAlias(false, false, grammarAccess.getCreateObjectMutatorAccess().getLeftCurlyBracketKeyword_4_1()), new TokenAlias(false, false, grammarAccess.getCreateObjectMutatorAccess().getRightCurlyBracketKeyword_4_4()));
		match_ModifyInformationMutator___WithKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_4__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getModifyInformationMutatorAccess().getWithKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getModifyInformationMutatorAccess().getLeftCurlyBracketKeyword_3_1()), new TokenAlias(false, false, grammarAccess.getModifyInformationMutatorAccess().getRightCurlyBracketKeyword_3_4()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if(match_CreateObjectMutator___WithKeyword_4_0_LeftCurlyBracketKeyword_4_1_RightCurlyBracketKeyword_4_4__q.equals(syntax))
				emit_CreateObjectMutator___WithKeyword_4_0_LeftCurlyBracketKeyword_4_1_RightCurlyBracketKeyword_4_4__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ModifyInformationMutator___WithKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_4__q.equals(syntax))
				emit_ModifyInformationMutator___WithKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_4__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ('with' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     container=ObSelectionStrategy (ambiguity) '[' max=MaxCardinality
	 *     container=ObSelectionStrategy (ambiguity) '[' min=EInt
	 *     container=ObSelectionStrategy (ambiguity) (rule end)
	 *     refType=[EReference|ID] (ambiguity) '[' max=MaxCardinality
	 *     refType=[EReference|ID] (ambiguity) '[' min=EInt
	 *     refType=[EReference|ID] (ambiguity) (rule end)
	 *     type=[EClass|ID] (ambiguity) '[' max=MaxCardinality
	 *     type=[EClass|ID] (ambiguity) '[' min=EInt
	 *     type=[EClass|ID] (ambiguity) (rule end)
	 */
	protected void emit_CreateObjectMutator___WithKeyword_4_0_LeftCurlyBracketKeyword_4_1_RightCurlyBracketKeyword_4_4__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('with' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     object=ObSelectionStrategy (ambiguity) '[' max=MaxCardinality
	 *     object=ObSelectionStrategy (ambiguity) '[' min=EInt
	 *     object=ObSelectionStrategy (ambiguity) (rule end)
	 */
	protected void emit_ModifyInformationMutator___WithKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_4__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
