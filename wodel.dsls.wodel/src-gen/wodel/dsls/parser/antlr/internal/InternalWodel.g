/*
 * generated by Xtext
 */
grammar InternalWodel;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package wodel.dsls.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package wodel.dsls.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import wodel.dsls.services.WodelGrammarAccess;

}

@parser::members {

 	private WodelGrammarAccess grammarAccess;
 	
    public InternalWodelParser(TokenStream input, WodelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "MutatorEnvironment";	
   	}
   	
   	@Override
   	protected WodelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleMutatorEnvironment
entryRuleMutatorEnvironment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMutatorEnvironmentRule()); }
	 iv_ruleMutatorEnvironment=ruleMutatorEnvironment 
	 { $current=$iv_ruleMutatorEnvironment.current; } 
	 EOF 
;

// Rule MutatorEnvironment
ruleMutatorEnvironment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMutatorEnvironmentAccess().getLoadLoadParserRuleCall_0_0()); 
	    }
		lv_load_0_0=ruleLoad		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMutatorEnvironmentRule());
	        }
       		add(
       			$current, 
       			"load",
        		lv_load_0_0, 
        		"Load");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMutatorEnvironmentAccess().getDefinitionDefinitionParserRuleCall_1_0()); 
	    }
		lv_definition_1_0=ruleDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMutatorEnvironmentRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_1_0, 
        		"Definition");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMutatorEnvironmentAccess().getWithKeyword_2());
    }
((	otherlv_3='blocks' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMutatorEnvironmentAccess().getBlocksKeyword_3_0_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMutatorEnvironmentAccess().getLeftCurlyBracketKeyword_3_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMutatorEnvironmentAccess().getBlocksBlockParserRuleCall_3_0_2_0()); 
	    }
		lv_blocks_5_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMutatorEnvironmentRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_5_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMutatorEnvironmentAccess().getBlocksBlockParserRuleCall_3_0_3_0()); 
	    }
		lv_blocks_6_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMutatorEnvironmentRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_6_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMutatorEnvironmentAccess().getRightCurlyBracketKeyword_3_0_4());
    }
)
    |(	otherlv_8='commands' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMutatorEnvironmentAccess().getCommandsKeyword_3_1_0());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMutatorEnvironmentAccess().getLeftCurlyBracketKeyword_3_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMutatorEnvironmentAccess().getCommandsMutatorParserRuleCall_3_1_2_0()); 
	    }
		lv_commands_10_0=ruleMutator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMutatorEnvironmentRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_10_0, 
        		"Mutator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMutatorEnvironmentAccess().getCommandsMutatorParserRuleCall_3_1_3_0()); 
	    }
		lv_commands_11_0=ruleMutator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMutatorEnvironmentRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_11_0, 
        		"Mutator");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMutatorEnvironmentAccess().getRightCurlyBracketKeyword_3_1_4());
    }
))(	otherlv_13='constraints' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getMutatorEnvironmentAccess().getConstraintsKeyword_4_0());
    }
	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getMutatorEnvironmentAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMutatorEnvironmentAccess().getConstraintsConstraintParserRuleCall_4_2_0()); 
	    }
		lv_constraints_15_0=ruleConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMutatorEnvironmentRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_15_0, 
        		"Constraint");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMutatorEnvironmentAccess().getConstraintsConstraintParserRuleCall_4_3_0()); 
	    }
		lv_constraints_16_0=ruleConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMutatorEnvironmentRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_16_0, 
        		"Constraint");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getMutatorEnvironmentAccess().getRightCurlyBracketKeyword_4_4());
    }
)?)
;





// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	 iv_ruleDefinition=ruleDefinition 
	 { $current=$iv_ruleDefinition.current; } 
	 EOF 
;

// Rule Definition
ruleDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getLibraryParserRuleCall_0()); 
    }
    this_Library_0=ruleLibrary
    { 
        $current = $this_Library_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getProgramParserRuleCall_1()); 
    }
    this_Program_1=ruleProgram
    { 
        $current = $this_Program_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLibrary
entryRuleLibrary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLibraryRule()); }
	 iv_ruleLibrary=ruleLibrary 
	 { $current=$iv_ruleLibrary.current; } 
	 EOF 
;

// Rule Library
ruleLibrary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLibraryAccess().getLibraryAction_0(),
            $current);
    }
)	otherlv_1='library' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLibraryAccess().getLibraryKeyword_1());
    }
	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLibraryAccess().getForKeyword_2());
    }
	otherlv_3='metamodel' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLibraryAccess().getMetamodelKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLibraryAccess().getMetamodelEStringParserRuleCall_4_0()); 
	    }
		lv_metamodel_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLibraryRule());
	        }
       		set(
       			$current, 
       			"metamodel",
        		lv_metamodel_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	 iv_ruleProgram=ruleProgram 
	 { $current=$iv_ruleProgram.current; } 
	 EOF 
;

// Rule Program
ruleProgram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getProgramAccess().getProgramAction_0(),
            $current);
    }
)	otherlv_1='generate' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProgramAccess().getGenerateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getNumEIntParserRuleCall_2_0()); 
	    }
		lv_num_2_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"num",
        		lv_num_2_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='mutants' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProgramAccess().getMutantsKeyword_3());
    }
	otherlv_4='in' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProgramAccess().getInKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getOutputEStringParserRuleCall_5_0()); 
	    }
		lv_output_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"output",
        		lv_output_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='from' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProgramAccess().getFromKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getSourceSourceParserRuleCall_7_0()); 
	    }
		lv_source_7_0=ruleSource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_7_0, 
        		"Source");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='metamodel' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getProgramAccess().getMetamodelKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getMetamodelEStringParserRuleCall_9_0()); 
	    }
		lv_metamodel_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"metamodel",
        		lv_metamodel_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSource
entryRuleSource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSourceRule()); }
	 iv_ruleSource=ruleSource 
	 { $current=$iv_ruleSource.current; } 
	 EOF 
;

// Rule Source
ruleSource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSourceAccess().getSourceAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSourceAccess().getPathEStringParserRuleCall_1_0()); 
	    }
		lv_path_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSourceRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleBlock=ruleBlock 
	 { $current=$iv_ruleBlock.current; } 
	 EOF 
;

// Rule Block
ruleBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getBlockAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='from' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getFromKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getFromBlockCrossReference_1_1_0()); 
	}

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getCommaKeyword_1_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getBlockAccess().getFromBlockCrossReference_1_2_1_0()); 
	}

)
))*)?(	otherlv_5='repeat' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBlockAccess().getRepeatKeyword_2_0());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBlockAccess().getEqualsSignKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getRepeatRepeatEnumRuleCall_2_2_0()); 
	    }
		lv_repeat_7_0=ruleRepeat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockRule());
	        }
       		set(
       			$current, 
       			"repeat",
        		lv_repeat_7_0, 
        		"Repeat");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getCommandsMutatorParserRuleCall_4_0()); 
	    }
		lv_commands_9_0=ruleMutator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_9_0, 
        		"Mutator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getCommandsMutatorParserRuleCall_5_0()); 
	    }
		lv_commands_10_0=ruleMutator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_10_0, 
        		"Mutator");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_6());
    }
(	otherlv_12='[' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBlockAccess().getLeftSquareBracketKeyword_7_0());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getMinEIntParserRuleCall_7_1_0_0_0()); 
	    }
		lv_min_13_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_13_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_14='..' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getBlockAccess().getFullStopFullStopKeyword_7_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getMaxMaxCardinalityParserRuleCall_7_1_0_2_0()); 
	    }
		lv_max_15_0=ruleMaxCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_15_0, 
        		"MaxCardinality");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getFixedEIntParserRuleCall_7_1_1_0()); 
	    }
		lv_fixed_16_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockRule());
	        }
       		set(
       			$current, 
       			"fixed",
        		lv_fixed_16_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_17=']' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getBlockAccess().getRightSquareBracketKeyword_7_2());
    }
)?)
;





// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	 iv_ruleConstraint=ruleConstraint 
	 { $current=$iv_ruleConstraint.current; } 
	 EOF 
;

// Rule Constraint
ruleConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='context' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstraintAccess().getContextKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getConstraintAccess().getTypeEClassCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getIdEStringParserRuleCall_2_0()); 
	    }
		lv_id_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstraintAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getRuleEStringParserRuleCall_4_0()); 
	    }
		lv_rule_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"rule",
        		lv_rule_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMutator
entryRuleMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMutatorRule()); }
	 iv_ruleMutator=ruleMutator 
	 { $current=$iv_ruleMutator.current; } 
	 EOF 
;

// Rule Mutator
ruleMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMutatorAccess().getCreateObjectMutatorParserRuleCall_0()); 
    }
    this_CreateObjectMutator_0=ruleCreateObjectMutator
    { 
        $current = $this_CreateObjectMutator_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMutatorAccess().getSelectObjectMutatorParserRuleCall_1()); 
    }
    this_SelectObjectMutator_1=ruleSelectObjectMutator
    { 
        $current = $this_SelectObjectMutator_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMutatorAccess().getCompositeMutatorParserRuleCall_2()); 
    }
    this_CompositeMutator_2=ruleCompositeMutator
    { 
        $current = $this_CompositeMutator_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMutatorAccess().getModifySourceReferenceMutatorParserRuleCall_3()); 
    }
    this_ModifySourceReferenceMutator_3=ruleModifySourceReferenceMutator
    { 
        $current = $this_ModifySourceReferenceMutator_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMutatorAccess().getModifyTargetReferenceMutatorParserRuleCall_4()); 
    }
    this_ModifyTargetReferenceMutator_4=ruleModifyTargetReferenceMutator
    { 
        $current = $this_ModifyTargetReferenceMutator_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMutatorAccess().getCreateReferenceMutatorParserRuleCall_5()); 
    }
    this_CreateReferenceMutator_5=ruleCreateReferenceMutator
    { 
        $current = $this_CreateReferenceMutator_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMutatorAccess().getRemoveObjectMutatorParserRuleCall_6()); 
    }
    this_RemoveObjectMutator_6=ruleRemoveObjectMutator
    { 
        $current = $this_RemoveObjectMutator_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMutatorAccess().getRemoveReferenceMutatorParserRuleCall_7()); 
    }
    this_RemoveReferenceMutator_7=ruleRemoveReferenceMutator
    { 
        $current = $this_RemoveReferenceMutator_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMutatorAccess().getModifyInformationMutatorParserRuleCall_8()); 
    }
    this_ModifyInformationMutator_8=ruleModifyInformationMutator
    { 
        $current = $this_ModifyInformationMutator_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMutatorAccess().getCloneObjectMutatorParserRuleCall_9()); 
    }
    this_CloneObjectMutator_9=ruleCloneObjectMutator
    { 
        $current = $this_CloneObjectMutator_9.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleObSelectionStrategy
entryRuleObSelectionStrategy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObSelectionStrategyRule()); }
	 iv_ruleObSelectionStrategy=ruleObSelectionStrategy 
	 { $current=$iv_ruleObSelectionStrategy.current; } 
	 EOF 
;

// Rule ObSelectionStrategy
ruleObSelectionStrategy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getObSelectionStrategyAccess().getRandomSelectionParserRuleCall_0()); 
    }
    this_RandomSelection_0=ruleRandomSelection
    { 
        $current = $this_RandomSelection_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObSelectionStrategyAccess().getSpecificSelectionParserRuleCall_1()); 
    }
    this_SpecificSelection_1=ruleSpecificSelection
    { 
        $current = $this_SpecificSelection_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObSelectionStrategyAccess().getCompleteSelectionParserRuleCall_2()); 
    }
    this_CompleteSelection_2=ruleCompleteSelection
    { 
        $current = $this_CompleteSelection_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObSelectionStrategyAccess().getOtherSelectionParserRuleCall_3()); 
    }
    this_OtherSelection_3=ruleOtherSelection
    { 
        $current = $this_OtherSelection_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObSelectionStrategyAccess().getSubsetSelectionParserRuleCall_4()); 
    }
    this_SubsetSelection_4=ruleSubsetSelection
    { 
        $current = $this_SubsetSelection_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRandomSelection
entryRuleRandomSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomSelectionRule()); }
	 iv_ruleRandomSelection=ruleRandomSelection 
	 { $current=$iv_ruleRandomSelection.current; } 
	 EOF 
;

// Rule RandomSelection
ruleRandomSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getRandomSelectionAccess().getRandomTypeSelectionParserRuleCall()); 
    }
    this_RandomTypeSelection_0=ruleRandomTypeSelection
    { 
        $current = $this_RandomTypeSelection_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleSpecificSelection
entryRuleSpecificSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecificSelectionRule()); }
	 iv_ruleSpecificSelection=ruleSpecificSelection 
	 { $current=$iv_ruleSpecificSelection.current; } 
	 EOF 
;

// Rule SpecificSelection
ruleSpecificSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSpecificSelectionAccess().getSpecificObjectSelectionParserRuleCall_0()); 
    }
    this_SpecificObjectSelection_0=ruleSpecificObjectSelection
    { 
        $current = $this_SpecificObjectSelection_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecificSelectionAccess().getSpecificClosureSelectionParserRuleCall_1()); 
    }
    this_SpecificClosureSelection_1=ruleSpecificClosureSelection
    { 
        $current = $this_SpecificClosureSelection_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCompleteSelection
entryRuleCompleteSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompleteSelectionRule()); }
	 iv_ruleCompleteSelection=ruleCompleteSelection 
	 { $current=$iv_ruleCompleteSelection.current; } 
	 EOF 
;

// Rule CompleteSelection
ruleCompleteSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getCompleteSelectionAccess().getCompleteTypeSelectionParserRuleCall()); 
    }
    this_CompleteTypeSelection_0=ruleCompleteTypeSelection
    { 
        $current = $this_CompleteTypeSelection_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleOtherSelection
entryRuleOtherSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOtherSelectionRule()); }
	 iv_ruleOtherSelection=ruleOtherSelection 
	 { $current=$iv_ruleOtherSelection.current; } 
	 EOF 
;

// Rule OtherSelection
ruleOtherSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getOtherSelectionAccess().getOtherTypeSelectionParserRuleCall()); 
    }
    this_OtherTypeSelection_0=ruleOtherTypeSelection
    { 
        $current = $this_OtherTypeSelection_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleSubsetSelection
entryRuleSubsetSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubsetSelectionRule()); }
	 iv_ruleSubsetSelection=ruleSubsetSelection 
	 { $current=$iv_ruleSubsetSelection.current; } 
	 EOF 
;

// Rule SubsetSelection
ruleSubsetSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getSubsetSelectionAccess().getEachTypeSelectionParserRuleCall()); 
    }
    this_EachTypeSelection_0=ruleEachTypeSelection
    { 
        $current = $this_EachTypeSelection_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleAttributeEvaluationType
entryRuleAttributeEvaluationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeEvaluationTypeRule()); }
	 iv_ruleAttributeEvaluationType=ruleAttributeEvaluationType 
	 { $current=$iv_ruleAttributeEvaluationType.current; } 
	 EOF 
;

// Rule AttributeEvaluationType
ruleAttributeEvaluationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAttributeEvaluationTypeAccess().getAttributeTypeParserRuleCall_0()); 
    }
    this_AttributeType_0=ruleAttributeType
    { 
        $current = $this_AttributeType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeEvaluationTypeAccess().getObjectAttributeTypeParserRuleCall_1()); 
    }
    this_ObjectAttributeType_1=ruleObjectAttributeType
    { 
        $current = $this_ObjectAttributeType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttributeType
entryRuleAttributeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeTypeRule()); }
	 iv_ruleAttributeType=ruleAttributeType 
	 { $current=$iv_ruleAttributeType.current; } 
	 EOF 
;

// Rule AttributeType
ruleAttributeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAttributeTypeAccess().getNumberTypeParserRuleCall_0()); 
    }
    this_NumberType_0=ruleNumberType
    { 
        $current = $this_NumberType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeTypeAccess().getBooleanTypeParserRuleCall_1()); 
    }
    this_BooleanType_1=ruleBooleanType
    { 
        $current = $this_BooleanType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeTypeAccess().getStringTypeParserRuleCall_2()); 
    }
    this_StringType_2=ruleStringType
    { 
        $current = $this_StringType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeTypeAccess().getListStringTypeParserRuleCall_3()); 
    }
    this_ListStringType_3=ruleListStringType
    { 
        $current = $this_ListStringType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeTypeAccess().getRandomTypeParserRuleCall_4()); 
    }
    this_RandomType_4=ruleRandomType
    { 
        $current = $this_RandomType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeTypeAccess().getListTypeParserRuleCall_5()); 
    }
    this_ListType_5=ruleListType
    { 
        $current = $this_ListType_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNumberType
entryRuleNumberType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberTypeRule()); }
	 iv_ruleNumberType=ruleNumberType 
	 { $current=$iv_ruleNumberType.current; } 
	 EOF 
;

// Rule NumberType
ruleNumberType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNumberTypeAccess().getIntegerTypeParserRuleCall_0()); 
    }
    this_IntegerType_0=ruleIntegerType
    { 
        $current = $this_IntegerType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNumberTypeAccess().getDoubleTypeParserRuleCall_1()); 
    }
    this_DoubleType_1=ruleDoubleType
    { 
        $current = $this_DoubleType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNumberTypeAccess().getMinValueTypeParserRuleCall_2()); 
    }
    this_MinValueType_2=ruleMinValueType
    { 
        $current = $this_MinValueType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNumberTypeAccess().getMaxValueTypeParserRuleCall_3()); 
    }
    this_MaxValueType_3=ruleMaxValueType
    { 
        $current = $this_MaxValueType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNumberTypeAccess().getRandomNumberTypeParserRuleCall_4()); 
    }
    this_RandomNumberType_4=ruleRandomNumberType
    { 
        $current = $this_RandomNumberType_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRandomNumberType
entryRuleRandomNumberType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomNumberTypeRule()); }
	 iv_ruleRandomNumberType=ruleRandomNumberType 
	 { $current=$iv_ruleRandomNumberType.current; } 
	 EOF 
;

// Rule RandomNumberType
ruleRandomNumberType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRandomNumberTypeAccess().getRandomDoubleNumberTypeParserRuleCall_0()); 
    }
    this_RandomDoubleNumberType_0=ruleRandomDoubleNumberType
    { 
        $current = $this_RandomDoubleNumberType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRandomNumberTypeAccess().getRandomIntegerNumberTypeParserRuleCall_1()); 
    }
    this_RandomIntegerNumberType_1=ruleRandomIntegerNumberType
    { 
        $current = $this_RandomIntegerNumberType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLoad
entryRuleLoad returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLoadRule()); }
	 iv_ruleLoad=ruleLoad 
	 { $current=$iv_ruleLoad.current; } 
	 EOF 
;

// Rule Load
ruleLoad returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLoadAccess().getLoadAction_0(),
            $current);
    }
)	otherlv_1='import' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLoadAccess().getImportKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLoadAccess().getFileEStringParserRuleCall_2_0()); 
	    }
		lv_file_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoadRule());
	        }
       		set(
       			$current, 
       			"file",
        		lv_file_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); } 
	 iv_ruleEDouble=ruleEDouble 
	 { $current=$iv_ruleEDouble.current.getText(); }  
	 EOF 
;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); 
    }
)?(    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); 
    }
)?
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); 
    }
((
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); 
    }

    |
	kw='e' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); 
    }
)(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); 
    }
)?    this_INT_7=RULE_INT    {
		$current.merge(this_INT_7);
    }

    { 
    newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); 
    }
)?)
    ;





// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); } 
	 iv_ruleEBoolean=ruleEBoolean 
	 { $current=$iv_ruleEBoolean.current.getText(); }  
	 EOF 
;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleBinaryOperator
entryRuleBinaryOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinaryOperatorRule()); }
	 iv_ruleBinaryOperator=ruleBinaryOperator 
	 { $current=$iv_ruleBinaryOperator.current; } 
	 EOF 
;

// Rule BinaryOperator
ruleBinaryOperator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBinaryOperatorAccess().getBinaryOperatorAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBinaryOperatorAccess().getTypeLogicOperatorEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleLogicOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBinaryOperatorRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"LogicOperator");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAttributeEvaluation
entryRuleAttributeEvaluation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeEvaluationRule()); }
	 iv_ruleAttributeEvaluation=ruleAttributeEvaluation 
	 { $current=$iv_ruleAttributeEvaluation.current; } 
	 EOF 
;

// Rule AttributeEvaluation
ruleAttributeEvaluation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeEvaluationAccess().getAttributeEvaluationAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeEvaluationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getAttributeEvaluationAccess().getNameEAttributeCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeEvaluationAccess().getValueAttributeEvaluationTypeParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleAttributeEvaluationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeEvaluationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"AttributeEvaluationType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleReferenceEvaluation
entryRuleReferenceEvaluation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceEvaluationRule()); }
	 iv_ruleReferenceEvaluation=ruleReferenceEvaluation 
	 { $current=$iv_ruleReferenceEvaluation.current; } 
	 EOF 
;

// Rule ReferenceEvaluation
ruleReferenceEvaluation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getReferenceEvaluationAccess().getReferenceEvaluationAction_0(),
            $current);
    }
)((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceEvaluationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getReferenceEvaluationAccess().getNameEReferenceCrossReference_1_0_0()); 
	}

)
)
    |	otherlv_2='self' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReferenceEvaluationAccess().getSelfKeyword_1_1());
    }
)(	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getReferenceEvaluationAccess().getHyphenMinusGreaterThanSignKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceEvaluationRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getReferenceEvaluationAccess().getRefNameEReferenceCrossReference_2_1_0()); 
	}

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceEvaluationAccess().getOperatorOperatorEnumRuleCall_3_0()); 
	    }
		lv_operator_5_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceEvaluationRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_5_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceEvaluationAccess().getValueObSelectionStrategyParserRuleCall_4_0_0()); 
	    }
		lv_value_6_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceEvaluationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |	otherlv_7='null' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getReferenceEvaluationAccess().getNullKeyword_4_1());
    }
))
;





// Entry rule entryRuleEvaluation
entryRuleEvaluation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEvaluationRule()); }
	 iv_ruleEvaluation=ruleEvaluation 
	 { $current=$iv_ruleEvaluation.current; } 
	 EOF 
;

// Rule Evaluation
ruleEvaluation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEvaluationAccess().getAttributeEvaluationParserRuleCall_0()); 
    }
    this_AttributeEvaluation_0=ruleAttributeEvaluation
    { 
        $current = $this_AttributeEvaluation_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEvaluationAccess().getReferenceEvaluationParserRuleCall_1()); 
    }
    this_ReferenceEvaluation_1=ruleReferenceEvaluation
    { 
        $current = $this_ReferenceEvaluation_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionAccess().getExpressionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getFirstEvaluationParserRuleCall_1_0()); 
	    }
		lv_first_1_0=ruleEvaluation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"first",
        		lv_first_1_0, 
        		"Evaluation");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getOperatorBinaryOperatorParserRuleCall_2_0_0()); 
	    }
		lv_operator_2_0=ruleBinaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		add(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"BinaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getSecondEvaluationParserRuleCall_2_1_0()); 
	    }
		lv_second_3_0=ruleEvaluation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		add(
       			$current, 
       			"second",
        		lv_second_3_0, 
        		"Evaluation");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleRemoveObjectMutator
entryRuleRemoveObjectMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemoveObjectMutatorRule()); }
	 iv_ruleRemoveObjectMutator=ruleRemoveObjectMutator 
	 { $current=$iv_ruleRemoveObjectMutator.current; } 
	 EOF 
;

// Rule RemoveObjectMutator
ruleRemoveObjectMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRemoveObjectMutatorAccess().getRemoveObjectMutatorAction_0(),
            $current);
    }
)	otherlv_1='remove' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRemoveObjectMutatorAccess().getRemoveKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRemoveObjectMutatorAccess().getObjectObSelectionStrategyParserRuleCall_2_0()); 
	    }
		lv_object_2_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoveObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"object",
        		lv_object_2_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='from' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRemoveObjectMutatorAccess().getFromKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRemoveObjectMutatorAccess().getContainerObSelectionStrategyParserRuleCall_3_1_0()); 
	    }
		lv_container_4_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoveObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"container",
        		lv_container_4_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRemoveObjectMutatorAccess().getLeftSquareBracketKeyword_4_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRemoveObjectMutatorAccess().getMinEIntParserRuleCall_4_1_0_0()); 
	    }
		lv_min_6_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoveObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_6_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='..' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRemoveObjectMutatorAccess().getFullStopFullStopKeyword_4_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getRemoveObjectMutatorAccess().getMaxMaxCardinalityParserRuleCall_4_2_0()); 
	    }
		lv_max_8_0=ruleMaxCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoveObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_8_0, 
        		"MaxCardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRemoveObjectMutatorAccess().getRightSquareBracketKeyword_4_3());
    }
)?)
;





// Entry rule entryRuleRemoveReferenceMutator
entryRuleRemoveReferenceMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemoveReferenceMutatorRule()); }
	 iv_ruleRemoveReferenceMutator=ruleRemoveReferenceMutator 
	 { $current=$iv_ruleRemoveReferenceMutator.current; } 
	 EOF 
;

// Rule RemoveReferenceMutator
ruleRemoveReferenceMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRemoveReferenceMutatorAccess().getRemoveRandomReferenceMutatorParserRuleCall_0()); 
    }
    this_RemoveRandomReferenceMutator_0=ruleRemoveRandomReferenceMutator
    { 
        $current = $this_RemoveRandomReferenceMutator_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRemoveReferenceMutatorAccess().getRemoveSpecificReferenceMutatorParserRuleCall_1()); 
    }
    this_RemoveSpecificReferenceMutator_1=ruleRemoveSpecificReferenceMutator
    { 
        $current = $this_RemoveSpecificReferenceMutator_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRemoveReferenceMutatorAccess().getRemoveCompleteReferenceMutatorParserRuleCall_2()); 
    }
    this_RemoveCompleteReferenceMutator_2=ruleRemoveCompleteReferenceMutator
    { 
        $current = $this_RemoveCompleteReferenceMutator_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRemoveRandomReferenceMutator
entryRuleRemoveRandomReferenceMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemoveRandomReferenceMutatorRule()); }
	 iv_ruleRemoveRandomReferenceMutator=ruleRemoveRandomReferenceMutator 
	 { $current=$iv_ruleRemoveRandomReferenceMutator.current; } 
	 EOF 
;

// Rule RemoveRandomReferenceMutator
ruleRemoveRandomReferenceMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRemoveRandomReferenceMutatorAccess().getRemoveRandomReferenceMutatorAction_0(),
            $current);
    }
)	otherlv_1='remove' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRemoveRandomReferenceMutatorAccess().getRemoveKeyword_1());
    }
	otherlv_2='one' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRemoveRandomReferenceMutatorAccess().getOneKeyword_2());
    }
	otherlv_3='reference' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRemoveRandomReferenceMutatorAccess().getReferenceKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemoveRandomReferenceMutatorRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getRemoveRandomReferenceMutatorAccess().getRefTypeEReferenceCrossReference_4_0()); 
	}

)
)	otherlv_5='in' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRemoveRandomReferenceMutatorAccess().getInKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemoveRandomReferenceMutatorRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getRemoveRandomReferenceMutatorAccess().getTypeEClassCrossReference_6_0()); 
	}

)
)(	otherlv_7='[' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRemoveRandomReferenceMutatorAccess().getLeftSquareBracketKeyword_7_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRemoveRandomReferenceMutatorAccess().getMinEIntParserRuleCall_7_1_0_0()); 
	    }
		lv_min_8_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoveRandomReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_8_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='..' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRemoveRandomReferenceMutatorAccess().getFullStopFullStopKeyword_7_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getRemoveRandomReferenceMutatorAccess().getMaxMaxCardinalityParserRuleCall_7_2_0()); 
	    }
		lv_max_10_0=ruleMaxCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoveRandomReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_10_0, 
        		"MaxCardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getRemoveRandomReferenceMutatorAccess().getRightSquareBracketKeyword_7_3());
    }
)?)
;





// Entry rule entryRuleRemoveSpecificReferenceMutator
entryRuleRemoveSpecificReferenceMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemoveSpecificReferenceMutatorRule()); }
	 iv_ruleRemoveSpecificReferenceMutator=ruleRemoveSpecificReferenceMutator 
	 { $current=$iv_ruleRemoveSpecificReferenceMutator.current; } 
	 EOF 
;

// Rule RemoveSpecificReferenceMutator
ruleRemoveSpecificReferenceMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRemoveSpecificReferenceMutatorAccess().getRemoveSpecificReferenceMutatorAction_0(),
            $current);
    }
)	otherlv_1='remove' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRemoveSpecificReferenceMutatorAccess().getRemoveKeyword_1());
    }
	otherlv_2='reference' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRemoveSpecificReferenceMutatorAccess().getReferenceKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemoveSpecificReferenceMutatorRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getRemoveSpecificReferenceMutatorAccess().getRefTypeEReferenceCrossReference_3_0()); 
	}

)
)	otherlv_4='in' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRemoveSpecificReferenceMutatorAccess().getInKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRemoveSpecificReferenceMutatorAccess().getContainerObSelectionStrategyParserRuleCall_5_0()); 
	    }
		lv_container_5_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoveSpecificReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"container",
        		lv_container_5_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRemoveSpecificReferenceMutatorAccess().getLeftSquareBracketKeyword_6_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRemoveSpecificReferenceMutatorAccess().getMinEIntParserRuleCall_6_1_0_0()); 
	    }
		lv_min_7_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoveSpecificReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_7_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='..' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRemoveSpecificReferenceMutatorAccess().getFullStopFullStopKeyword_6_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getRemoveSpecificReferenceMutatorAccess().getMaxMaxCardinalityParserRuleCall_6_2_0()); 
	    }
		lv_max_9_0=ruleMaxCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoveSpecificReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_9_0, 
        		"MaxCardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=']' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRemoveSpecificReferenceMutatorAccess().getRightSquareBracketKeyword_6_3());
    }
)?)
;





// Entry rule entryRuleRemoveCompleteReferenceMutator
entryRuleRemoveCompleteReferenceMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemoveCompleteReferenceMutatorRule()); }
	 iv_ruleRemoveCompleteReferenceMutator=ruleRemoveCompleteReferenceMutator 
	 { $current=$iv_ruleRemoveCompleteReferenceMutator.current; } 
	 EOF 
;

// Rule RemoveCompleteReferenceMutator
ruleRemoveCompleteReferenceMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRemoveCompleteReferenceMutatorAccess().getRemoveCompleteReferenceMutatorAction_0(),
            $current);
    }
)	otherlv_1='remove' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRemoveCompleteReferenceMutatorAccess().getRemoveKeyword_1());
    }
	otherlv_2='all' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRemoveCompleteReferenceMutatorAccess().getAllKeyword_2());
    }
	otherlv_3='reference' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRemoveCompleteReferenceMutatorAccess().getReferenceKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemoveCompleteReferenceMutatorRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getRemoveCompleteReferenceMutatorAccess().getRefTypeEReferenceCrossReference_4_0()); 
	}

)
)	otherlv_5='in' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRemoveCompleteReferenceMutatorAccess().getInKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemoveCompleteReferenceMutatorRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getRemoveCompleteReferenceMutatorAccess().getTypeEClassCrossReference_6_0()); 
	}

)
))
;





// Entry rule entryRuleCreateObjectMutator
entryRuleCreateObjectMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCreateObjectMutatorRule()); }
	 iv_ruleCreateObjectMutator=ruleCreateObjectMutator 
	 { $current=$iv_ruleCreateObjectMutator.current; } 
	 EOF 
;

// Rule CreateObjectMutator
ruleCreateObjectMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getCreateObjectMutatorAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCreateObjectMutatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCreateObjectMutatorAccess().getEqualsSignKeyword_0_1());
    }
)?	otherlv_2='create' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCreateObjectMutatorAccess().getCreateKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCreateObjectMutatorRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getCreateObjectMutatorAccess().getTypeEClassCrossReference_2_0()); 
	}

)
)(	otherlv_4='in' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCreateObjectMutatorAccess().getInKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateObjectMutatorAccess().getContainerObSelectionStrategyParserRuleCall_3_1_0()); 
	    }
		lv_container_5_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"container",
        		lv_container_5_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='with' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCreateObjectMutatorAccess().getWithKeyword_4_0());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCreateObjectMutatorAccess().getLeftCurlyBracketKeyword_4_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCreateObjectMutatorAccess().getAttributesAttributeSetParserRuleCall_4_2_0_0()); 
	    }
		lv_attributes_8_0=ruleAttributeSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateObjectMutatorRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_8_0, 
        		"AttributeSet");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateObjectMutatorAccess().getReferencesReferenceSetParserRuleCall_4_2_1_0()); 
	    }
		lv_references_9_0=ruleReferenceSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateObjectMutatorRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_9_0, 
        		"ReferenceSet");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCreateObjectMutatorAccess().getCommaKeyword_4_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCreateObjectMutatorAccess().getAttributesAttributeSetParserRuleCall_4_3_1_0_0()); 
	    }
		lv_attributes_11_0=ruleAttributeSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateObjectMutatorRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_11_0, 
        		"AttributeSet");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateObjectMutatorAccess().getReferencesReferenceSetParserRuleCall_4_3_1_1_0()); 
	    }
		lv_references_12_0=ruleReferenceSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateObjectMutatorRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_12_0, 
        		"ReferenceSet");
	        afterParserOrEnumRuleCall();
	    }

)
)))*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCreateObjectMutatorAccess().getRightCurlyBracketKeyword_4_4());
    }
)?(	otherlv_14='[' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCreateObjectMutatorAccess().getLeftSquareBracketKeyword_5_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCreateObjectMutatorAccess().getMinEIntParserRuleCall_5_1_0_0()); 
	    }
		lv_min_15_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_15_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_16='..' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getCreateObjectMutatorAccess().getFullStopFullStopKeyword_5_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateObjectMutatorAccess().getMaxMaxCardinalityParserRuleCall_5_2_0()); 
	    }
		lv_max_17_0=ruleMaxCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_17_0, 
        		"MaxCardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_18=']' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getCreateObjectMutatorAccess().getRightSquareBracketKeyword_5_3());
    }
)?)
;





// Entry rule entryRuleSelectObjectMutator
entryRuleSelectObjectMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectObjectMutatorRule()); }
	 iv_ruleSelectObjectMutator=ruleSelectObjectMutator 
	 { $current=$iv_ruleSelectObjectMutator.current; } 
	 EOF 
;

// Rule SelectObjectMutator
ruleSelectObjectMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSelectObjectMutatorAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectObjectMutatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSelectObjectMutatorAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='select' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSelectObjectMutatorAccess().getSelectKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectObjectMutatorAccess().getObjectObSelectionStrategyParserRuleCall_3_0()); 
	    }
		lv_object_3_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"object",
        		lv_object_3_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='in' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSelectObjectMutatorAccess().getInKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectObjectMutatorAccess().getContainerObSelectionStrategyParserRuleCall_4_1_0()); 
	    }
		lv_container_5_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"container",
        		lv_container_5_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleModifyInformationMutator
entryRuleModifyInformationMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModifyInformationMutatorRule()); }
	 iv_ruleModifyInformationMutator=ruleModifyInformationMutator 
	 { $current=$iv_ruleModifyInformationMutator.current; } 
	 EOF 
;

// Rule ModifyInformationMutator
ruleModifyInformationMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getModifyInformationMutatorAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModifyInformationMutatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModifyInformationMutatorAccess().getEqualsSignKeyword_0_1());
    }
)?	otherlv_2='modify' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModifyInformationMutatorAccess().getModifyKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModifyInformationMutatorAccess().getObjectObSelectionStrategyParserRuleCall_2_0()); 
	    }
		lv_object_3_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifyInformationMutatorRule());
	        }
       		set(
       			$current, 
       			"object",
        		lv_object_3_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='with' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModifyInformationMutatorAccess().getWithKeyword_3_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModifyInformationMutatorAccess().getLeftCurlyBracketKeyword_3_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getModifyInformationMutatorAccess().getAttributesAttributeSetParserRuleCall_3_2_0_0()); 
	    }
		lv_attributes_6_0=ruleAttributeSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifyInformationMutatorRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_6_0, 
        		"AttributeSet");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModifyInformationMutatorAccess().getReferencesReferenceSetParserRuleCall_3_2_1_0()); 
	    }
		lv_references_7_0=ruleReferenceSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifyInformationMutatorRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_7_0, 
        		"ReferenceSet");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getModifyInformationMutatorAccess().getCommaKeyword_3_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getModifyInformationMutatorAccess().getAttributesAttributeSetParserRuleCall_3_3_1_0_0()); 
	    }
		lv_attributes_9_0=ruleAttributeSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifyInformationMutatorRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_9_0, 
        		"AttributeSet");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModifyInformationMutatorAccess().getReferencesReferenceSetParserRuleCall_3_3_1_1_0()); 
	    }
		lv_references_10_0=ruleReferenceSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifyInformationMutatorRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_10_0, 
        		"ReferenceSet");
	        afterParserOrEnumRuleCall();
	    }

)
)))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getModifyInformationMutatorAccess().getRightCurlyBracketKeyword_3_4());
    }
)?(	otherlv_12='[' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getModifyInformationMutatorAccess().getLeftSquareBracketKeyword_4_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getModifyInformationMutatorAccess().getMinEIntParserRuleCall_4_1_0_0()); 
	    }
		lv_min_13_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifyInformationMutatorRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_13_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_14='..' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getModifyInformationMutatorAccess().getFullStopFullStopKeyword_4_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getModifyInformationMutatorAccess().getMaxMaxCardinalityParserRuleCall_4_2_0()); 
	    }
		lv_max_15_0=ruleMaxCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifyInformationMutatorRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_15_0, 
        		"MaxCardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_16=']' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getModifyInformationMutatorAccess().getRightSquareBracketKeyword_4_3());
    }
)?)
;





// Entry rule entryRuleCreateReferenceMutator
entryRuleCreateReferenceMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCreateReferenceMutatorRule()); }
	 iv_ruleCreateReferenceMutator=ruleCreateReferenceMutator 
	 { $current=$iv_ruleCreateReferenceMutator.current; } 
	 EOF 
;

// Rule CreateReferenceMutator
ruleCreateReferenceMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getCreateReferenceMutatorAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCreateReferenceMutatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCreateReferenceMutatorAccess().getEqualsSignKeyword_0_1());
    }
)?	otherlv_2='create' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCreateReferenceMutatorAccess().getCreateKeyword_1());
    }
	otherlv_3='reference' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCreateReferenceMutatorAccess().getReferenceKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCreateReferenceMutatorRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getCreateReferenceMutatorAccess().getRefTypeEReferenceCrossReference_3_0()); 
	}

)
)(	otherlv_5='to' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCreateReferenceMutatorAccess().getToKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateReferenceMutatorAccess().getTargetObSelectionStrategyParserRuleCall_4_1_0()); 
	    }
		lv_target_6_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"target",
        		lv_target_6_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='in' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCreateReferenceMutatorAccess().getInKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateReferenceMutatorAccess().getSourceObSelectionStrategyParserRuleCall_5_1_0()); 
	    }
		lv_source_8_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_8_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='[' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCreateReferenceMutatorAccess().getLeftSquareBracketKeyword_6_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCreateReferenceMutatorAccess().getMinEIntParserRuleCall_6_1_0_0()); 
	    }
		lv_min_10_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_10_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='..' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCreateReferenceMutatorAccess().getFullStopFullStopKeyword_6_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateReferenceMutatorAccess().getMaxMaxCardinalityParserRuleCall_6_2_0()); 
	    }
		lv_max_12_0=ruleMaxCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_12_0, 
        		"MaxCardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=']' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCreateReferenceMutatorAccess().getRightSquareBracketKeyword_6_3());
    }
)?)
;





// Entry rule entryRuleModifySourceReferenceMutator
entryRuleModifySourceReferenceMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModifySourceReferenceMutatorRule()); }
	 iv_ruleModifySourceReferenceMutator=ruleModifySourceReferenceMutator 
	 { $current=$iv_ruleModifySourceReferenceMutator.current; } 
	 EOF 
;

// Rule ModifySourceReferenceMutator
ruleModifySourceReferenceMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='modify' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModifySourceReferenceMutatorAccess().getModifyKeyword_0());
    }
	otherlv_1='source' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModifySourceReferenceMutatorAccess().getSourceKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModifySourceReferenceMutatorRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getModifySourceReferenceMutatorAccess().getRefTypeEReferenceCrossReference_2_0()); 
	}

)
)(	otherlv_3='from' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModifySourceReferenceMutatorAccess().getFromKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModifySourceReferenceMutatorAccess().getSourceObSelectionStrategyParserRuleCall_3_1_0()); 
	    }
		lv_source_4_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifySourceReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_4_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='to' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModifySourceReferenceMutatorAccess().getToKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModifySourceReferenceMutatorAccess().getNewSourceObSelectionStrategyParserRuleCall_4_1_0()); 
	    }
		lv_newSource_6_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifySourceReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"newSource",
        		lv_newSource_6_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='[' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getModifySourceReferenceMutatorAccess().getLeftSquareBracketKeyword_5_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getModifySourceReferenceMutatorAccess().getMinEIntParserRuleCall_5_1_0_0()); 
	    }
		lv_min_8_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifySourceReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_8_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='..' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getModifySourceReferenceMutatorAccess().getFullStopFullStopKeyword_5_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getModifySourceReferenceMutatorAccess().getMaxMaxCardinalityParserRuleCall_5_2_0()); 
	    }
		lv_max_10_0=ruleMaxCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifySourceReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_10_0, 
        		"MaxCardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getModifySourceReferenceMutatorAccess().getRightSquareBracketKeyword_5_3());
    }
)?)
;





// Entry rule entryRuleModifyTargetReferenceMutator
entryRuleModifyTargetReferenceMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModifyTargetReferenceMutatorRule()); }
	 iv_ruleModifyTargetReferenceMutator=ruleModifyTargetReferenceMutator 
	 { $current=$iv_ruleModifyTargetReferenceMutator.current; } 
	 EOF 
;

// Rule ModifyTargetReferenceMutator
ruleModifyTargetReferenceMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='modify' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModifyTargetReferenceMutatorAccess().getModifyKeyword_0());
    }
	otherlv_1='target' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModifyTargetReferenceMutatorAccess().getTargetKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModifyTargetReferenceMutatorRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getModifyTargetReferenceMutatorAccess().getRefTypeEReferenceCrossReference_2_0()); 
	}

)
)(	otherlv_3='from' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModifyTargetReferenceMutatorAccess().getFromKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModifyTargetReferenceMutatorAccess().getSourceObSelectionStrategyParserRuleCall_3_1_0()); 
	    }
		lv_source_4_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifyTargetReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_4_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='to' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModifyTargetReferenceMutatorAccess().getToKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModifyTargetReferenceMutatorAccess().getNewTargetObSelectionStrategyParserRuleCall_4_1_0()); 
	    }
		lv_newTarget_6_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifyTargetReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"newTarget",
        		lv_newTarget_6_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='[' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getModifyTargetReferenceMutatorAccess().getLeftSquareBracketKeyword_5_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getModifyTargetReferenceMutatorAccess().getMinEIntParserRuleCall_5_1_0_0()); 
	    }
		lv_min_8_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifyTargetReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_8_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='..' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getModifyTargetReferenceMutatorAccess().getFullStopFullStopKeyword_5_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getModifyTargetReferenceMutatorAccess().getMaxMaxCardinalityParserRuleCall_5_2_0()); 
	    }
		lv_max_10_0=ruleMaxCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifyTargetReferenceMutatorRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_10_0, 
        		"MaxCardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getModifyTargetReferenceMutatorAccess().getRightSquareBracketKeyword_5_3());
    }
)?)
;





// Entry rule entryRuleCompositeMutator
entryRuleCompositeMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeMutatorRule()); }
	 iv_ruleCompositeMutator=ruleCompositeMutator 
	 { $current=$iv_ruleCompositeMutator.current; } 
	 EOF 
;

// Rule CompositeMutator
ruleCompositeMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getCompositeMutatorAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompositeMutatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCompositeMutatorAccess().getEqualsSignKeyword_0_1());
    }
)?	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCompositeMutatorAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeMutatorAccess().getCommandsMutatorParserRuleCall_2_0()); 
	    }
		lv_commands_3_0=ruleMutator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeMutatorRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_3_0, 
        		"Mutator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeMutatorAccess().getCommandsMutatorParserRuleCall_3_0()); 
	    }
		lv_commands_4_0=ruleMutator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeMutatorRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_4_0, 
        		"Mutator");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCompositeMutatorAccess().getRightSquareBracketKeyword_4());
    }
(	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCompositeMutatorAccess().getLeftSquareBracketKeyword_5_0());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeMutatorAccess().getMinEIntParserRuleCall_5_1_0_0_0()); 
	    }
		lv_min_7_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeMutatorRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_7_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='..' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCompositeMutatorAccess().getFullStopFullStopKeyword_5_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeMutatorAccess().getMaxMaxCardinalityParserRuleCall_5_1_0_2_0()); 
	    }
		lv_max_9_0=ruleMaxCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeMutatorRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_9_0, 
        		"MaxCardinality");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeMutatorAccess().getFixedEIntParserRuleCall_5_1_1_0()); 
	    }
		lv_fixed_10_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeMutatorRule());
	        }
       		set(
       			$current, 
       			"fixed",
        		lv_fixed_10_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCompositeMutatorAccess().getRightSquareBracketKeyword_5_2());
    }
)?)
;





// Entry rule entryRuleCloneObjectMutator
entryRuleCloneObjectMutator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCloneObjectMutatorRule()); }
	 iv_ruleCloneObjectMutator=ruleCloneObjectMutator 
	 { $current=$iv_ruleCloneObjectMutator.current; } 
	 EOF 
;

// Rule CloneObjectMutator
ruleCloneObjectMutator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getCloneObjectMutatorAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloneObjectMutatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCloneObjectMutatorAccess().getEqualsSignKeyword_0_1());
    }
)?	otherlv_2='clone' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCloneObjectMutatorAccess().getCloneKeyword_1());
    }
(
(
		lv_contents_3_0=	'contents' 
    {
        newLeafNode(lv_contents_3_0, grammarAccess.getCloneObjectMutatorAccess().getContentsContentsKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloneObjectMutatorRule());
	        }
       		setWithLastConsumed($current, "contents", true, "contents");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCloneObjectMutatorAccess().getObjectObSelectionStrategyParserRuleCall_3_0()); 
	    }
		lv_object_4_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloneObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"object",
        		lv_object_4_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='in' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCloneObjectMutatorAccess().getInKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCloneObjectMutatorAccess().getContainerObSelectionStrategyParserRuleCall_4_1_0()); 
	    }
		lv_container_6_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloneObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"container",
        		lv_container_6_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='with' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCloneObjectMutatorAccess().getWithKeyword_5_0());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCloneObjectMutatorAccess().getLeftCurlyBracketKeyword_5_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCloneObjectMutatorAccess().getAttributesAttributeSetParserRuleCall_5_2_0_0()); 
	    }
		lv_attributes_9_0=ruleAttributeSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloneObjectMutatorRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_9_0, 
        		"AttributeSet");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCloneObjectMutatorAccess().getReferencesReferenceSetParserRuleCall_5_2_1_0()); 
	    }
		lv_references_10_0=ruleReferenceSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloneObjectMutatorRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_10_0, 
        		"ReferenceSet");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCloneObjectMutatorAccess().getCommaKeyword_5_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCloneObjectMutatorAccess().getAttributesAttributeSetParserRuleCall_5_3_1_0_0()); 
	    }
		lv_attributes_12_0=ruleAttributeSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloneObjectMutatorRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_12_0, 
        		"AttributeSet");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCloneObjectMutatorAccess().getReferencesReferenceSetParserRuleCall_5_3_1_1_0()); 
	    }
		lv_references_13_0=ruleReferenceSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloneObjectMutatorRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_13_0, 
        		"ReferenceSet");
	        afterParserOrEnumRuleCall();
	    }

)
)))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCloneObjectMutatorAccess().getRightCurlyBracketKeyword_5_4());
    }
)?(	otherlv_15='[' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCloneObjectMutatorAccess().getLeftSquareBracketKeyword_6_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCloneObjectMutatorAccess().getMinEIntParserRuleCall_6_1_0_0()); 
	    }
		lv_min_16_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloneObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_16_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17='..' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getCloneObjectMutatorAccess().getFullStopFullStopKeyword_6_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCloneObjectMutatorAccess().getMaxMaxCardinalityParserRuleCall_6_2_0()); 
	    }
		lv_max_18_0=ruleMaxCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloneObjectMutatorRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_18_0, 
        		"MaxCardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_19=']' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getCloneObjectMutatorAccess().getRightSquareBracketKeyword_6_3());
    }
)?)
;





// Entry rule entryRuleAttributeSet
entryRuleAttributeSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeSetRule()); }
	 iv_ruleAttributeSet=ruleAttributeSet 
	 { $current=$iv_ruleAttributeSet.current; } 
	 EOF 
;

// Rule AttributeSet
ruleAttributeSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAttributeSetAccess().getAttributeScalarParserRuleCall_0()); 
    }
    this_AttributeScalar_0=ruleAttributeScalar
    { 
        $current = $this_AttributeScalar_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeSetAccess().getAttributeUnsetParserRuleCall_1()); 
    }
    this_AttributeUnset_1=ruleAttributeUnset
    { 
        $current = $this_AttributeUnset_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeSetAccess().getAttributeSwapParserRuleCall_2()); 
    }
    this_AttributeSwap_2=ruleAttributeSwap
    { 
        $current = $this_AttributeSwap_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeSetAccess().getAttributeCopyParserRuleCall_3()); 
    }
    this_AttributeCopy_3=ruleAttributeCopy
    { 
        $current = $this_AttributeCopy_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeSetAccess().getAttributeReverseParserRuleCall_4()); 
    }
    this_AttributeReverse_4=ruleAttributeReverse
    { 
        $current = $this_AttributeReverse_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeSetAccess().getAttributeOperationParserRuleCall_5()); 
    }
    this_AttributeOperation_5=ruleAttributeOperation
    { 
        $current = $this_AttributeOperation_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttributeScalar
entryRuleAttributeScalar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeScalarRule()); }
	 iv_ruleAttributeScalar=ruleAttributeScalar 
	 { $current=$iv_ruleAttributeScalar.current; } 
	 EOF 
;

// Rule AttributeScalar
ruleAttributeScalar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeScalarRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getAttributeScalarAccess().getAttributeEAttributeCrossReference_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeScalarAccess().getValueAttributeTypeParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleAttributeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeScalarRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"AttributeType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAttributeUnset
entryRuleAttributeUnset returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeUnsetRule()); }
	 iv_ruleAttributeUnset=ruleAttributeUnset 
	 { $current=$iv_ruleAttributeUnset.current; } 
	 EOF 
;

// Rule AttributeUnset
ruleAttributeUnset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='unset' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeUnsetAccess().getUnsetKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeUnsetAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeUnsetRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getAttributeUnsetAccess().getAttributeEAttributeCrossReference_2_0()); 
	}

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributeUnsetAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleAttributeSwap
entryRuleAttributeSwap returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeSwapRule()); }
	 iv_ruleAttributeSwap=ruleAttributeSwap 
	 { $current=$iv_ruleAttributeSwap.current; } 
	 EOF 
;

// Rule AttributeSwap
ruleAttributeSwap returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='swap' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeSwapAccess().getSwapKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeSwapAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSwapRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getAttributeSwapAccess().getAttributeEAttributeCrossReference_2_0()); 
	}

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributeSwapAccess().getCommaKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeSwapAccess().getObjectObSelectionStrategyParserRuleCall_4_0_0()); 
	    }
		lv_object_4_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeSwapRule());
	        }
       		set(
       			$current, 
       			"object",
        		lv_object_4_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeSwapAccess().getFullStopKeyword_4_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSwapRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getAttributeSwapAccess().getAttributeEAttributeCrossReference_5_0()); 
	}

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAttributeSwapAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleAttributeCopy
entryRuleAttributeCopy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeCopyRule()); }
	 iv_ruleAttributeCopy=ruleAttributeCopy 
	 { $current=$iv_ruleAttributeCopy.current; } 
	 EOF 
;

// Rule AttributeCopy
ruleAttributeCopy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='copy' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeCopyAccess().getCopyKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeCopyAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeCopyRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getAttributeCopyAccess().getAttributeEAttributeCrossReference_2_0()); 
	}

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributeCopyAccess().getCommaKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeCopyAccess().getObjectObSelectionStrategyParserRuleCall_4_0_0()); 
	    }
		lv_object_4_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeCopyRule());
	        }
       		set(
       			$current, 
       			"object",
        		lv_object_4_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeCopyAccess().getFullStopKeyword_4_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeCopyRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getAttributeCopyAccess().getAttributeEAttributeCrossReference_5_0()); 
	}

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAttributeCopyAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleAttributeReverse
entryRuleAttributeReverse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeReverseRule()); }
	 iv_ruleAttributeReverse=ruleAttributeReverse 
	 { $current=$iv_ruleAttributeReverse.current; } 
	 EOF 
;

// Rule AttributeReverse
ruleAttributeReverse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='reverse' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeReverseAccess().getReverseKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeReverseAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeReverseRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getAttributeReverseAccess().getAttributeEAttributeCrossReference_2_0()); 
	}

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributeReverseAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleAttributeOperation
entryRuleAttributeOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeOperationRule()); }
	 iv_ruleAttributeOperation=ruleAttributeOperation 
	 { $current=$iv_ruleAttributeOperation.current; } 
	 EOF 
;

// Rule AttributeOperation
ruleAttributeOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeOperationRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getAttributeOperationAccess().getAttributeEAttributeCrossReference_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeOperationAccess().getOperatorArithmeticOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleArithmeticOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeOperationRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"ArithmeticOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeOperationAccess().getValueAttributeEvaluationTypeParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleAttributeEvaluationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeOperationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"AttributeEvaluationType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleReferenceSet
entryRuleReferenceSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceSetRule()); }
	 iv_ruleReferenceSet=ruleReferenceSet 
	 { $current=$iv_ruleReferenceSet.current; } 
	 EOF 
;

// Rule ReferenceSet
ruleReferenceSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getReferenceSetAccess().getReferenceInitParserRuleCall_0()); 
    }
    this_ReferenceInit_0=ruleReferenceInit
    { 
        $current = $this_ReferenceInit_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getReferenceSetAccess().getReferenceSwapParserRuleCall_1()); 
    }
    this_ReferenceSwap_1=ruleReferenceSwap
    { 
        $current = $this_ReferenceSwap_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getReferenceSetAccess().getReferenceAttParserRuleCall_2()); 
    }
    this_ReferenceAtt_2=ruleReferenceAtt
    { 
        $current = $this_ReferenceAtt_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleReferenceInit
entryRuleReferenceInit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceInitRule()); }
	 iv_ruleReferenceInit=ruleReferenceInit 
	 { $current=$iv_ruleReferenceInit.current; } 
	 EOF 
;

// Rule ReferenceInit
ruleReferenceInit returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceInitRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getReferenceInitAccess().getReferenceEReferenceCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReferenceInitAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceInitAccess().getObjectObSelectionStrategyParserRuleCall_2_0()); 
	    }
		lv_object_2_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceInitRule());
	        }
       		set(
       			$current, 
       			"object",
        		lv_object_2_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleReferenceSwap
entryRuleReferenceSwap returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceSwapRule()); }
	 iv_ruleReferenceSwap=ruleReferenceSwap 
	 { $current=$iv_ruleReferenceSwap.current; } 
	 EOF 
;

// Rule ReferenceSwap
ruleReferenceSwap returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='swapref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReferenceSwapAccess().getSwaprefKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReferenceSwapAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceSwapRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getReferenceSwapAccess().getReferenceEReferenceCrossReference_2_0()); 
	}

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getReferenceSwapAccess().getCommaKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceSwapAccess().getObjectObSelectionStrategyParserRuleCall_4_0_0()); 
	    }
		lv_object_4_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceSwapRule());
	        }
       		set(
       			$current, 
       			"object",
        		lv_object_4_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='->' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getReferenceSwapAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceSwapRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getReferenceSwapAccess().getReferenceEReferenceCrossReference_5_0()); 
	}

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getReferenceSwapAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleReferenceAtt
entryRuleReferenceAtt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceAttRule()); }
	 iv_ruleReferenceAtt=ruleReferenceAtt 
	 { $current=$iv_ruleReferenceAtt.current; } 
	 EOF 
;

// Rule ReferenceAtt
ruleReferenceAtt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceAttRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getReferenceAttAccess().getReferenceEReferenceCrossReference_0_0()); 
	}

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReferenceAttAccess().getFullStopKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceAttRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getReferenceAttAccess().getAttributeEAttributeCrossReference_2_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceAttAccess().getValueAttributeTypeParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleAttributeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceAttRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"AttributeType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRandomTypeSelection
entryRuleRandomTypeSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomTypeSelectionRule()); }
	 iv_ruleRandomTypeSelection=ruleRandomTypeSelection 
	 { $current=$iv_ruleRandomTypeSelection.current; } 
	 EOF 
;

// Rule RandomTypeSelection
ruleRandomTypeSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRandomTypeSelectionAccess().getRandomTypeSelectionAction_0(),
            $current);
    }
)	otherlv_1='one' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRandomTypeSelectionAccess().getOneKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRandomTypeSelectionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getRandomTypeSelectionAccess().getTypeEClassCrossReference_2_0()); 
	}

)
)(	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRandomTypeSelectionAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRandomTypeSelectionRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getRandomTypeSelectionAccess().getRefTypeEReferenceCrossReference_3_1_0()); 
	}

)
))?(	otherlv_5='where' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRandomTypeSelectionAccess().getWhereKeyword_4_0());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRandomTypeSelectionAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomTypeSelectionAccess().getExpressionExpressionParserRuleCall_4_2_0()); 
	    }
		lv_expression_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomTypeSelectionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRandomTypeSelectionAccess().getRightCurlyBracketKeyword_4_3());
    }
)?)
;





// Entry rule entryRuleSpecificObjectSelection
entryRuleSpecificObjectSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecificObjectSelectionRule()); }
	 iv_ruleSpecificObjectSelection=ruleSpecificObjectSelection 
	 { $current=$iv_ruleSpecificObjectSelection.current; } 
	 EOF 
;

// Rule SpecificObjectSelection
ruleSpecificObjectSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecificObjectSelectionAccess().getSpecificObjectSelectionAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpecificObjectSelectionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSpecificObjectSelectionAccess().getObjSelObjectEmitterCrossReference_1_0()); 
	}

)
)(	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpecificObjectSelectionAccess().getHyphenMinusGreaterThanSignKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpecificObjectSelectionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getSpecificObjectSelectionAccess().getRefTypeEReferenceCrossReference_2_1_0()); 
	}

)
))?(	otherlv_4='where' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSpecificObjectSelectionAccess().getWhereKeyword_3_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSpecificObjectSelectionAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificObjectSelectionAccess().getExpressionExpressionParserRuleCall_3_2_0()); 
	    }
		lv_expression_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificObjectSelectionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSpecificObjectSelectionAccess().getRightCurlyBracketKeyword_3_3());
    }
)?)
;





// Entry rule entryRuleSpecificClosureSelection
entryRuleSpecificClosureSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecificClosureSelectionRule()); }
	 iv_ruleSpecificClosureSelection=ruleSpecificClosureSelection 
	 { $current=$iv_ruleSpecificClosureSelection.current; } 
	 EOF 
;

// Rule SpecificClosureSelection
ruleSpecificClosureSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecificClosureSelectionAccess().getSpecificClosureSelectionAction_0(),
            $current);
    }
)	otherlv_1='closure' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpecificClosureSelectionAccess().getClosureKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpecificClosureSelectionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpecificClosureSelectionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getSpecificClosureSelectionAccess().getObjSelObjectEmitterCrossReference_3_0()); 
	}

)
)(	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSpecificClosureSelectionAccess().getHyphenMinusGreaterThanSignKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpecificClosureSelectionRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getSpecificClosureSelectionAccess().getRefTypeEReferenceCrossReference_4_1_0()); 
	}

)
))?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSpecificClosureSelectionAccess().getRightParenthesisKeyword_5());
    }
(	otherlv_7='where' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSpecificClosureSelectionAccess().getWhereKeyword_6_0());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSpecificClosureSelectionAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificClosureSelectionAccess().getExpressionExpressionParserRuleCall_6_2_0()); 
	    }
		lv_expression_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificClosureSelectionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_9_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSpecificClosureSelectionAccess().getRightCurlyBracketKeyword_6_3());
    }
)?)
;





// Entry rule entryRuleCompleteTypeSelection
entryRuleCompleteTypeSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompleteTypeSelectionRule()); }
	 iv_ruleCompleteTypeSelection=ruleCompleteTypeSelection 
	 { $current=$iv_ruleCompleteTypeSelection.current; } 
	 EOF 
;

// Rule CompleteTypeSelection
ruleCompleteTypeSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCompleteTypeSelectionAccess().getCompleteTypeSelectionAction_0(),
            $current);
    }
)	otherlv_1='all' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCompleteTypeSelectionAccess().getAllKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompleteTypeSelectionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getCompleteTypeSelectionAccess().getTypeEClassCrossReference_2_0()); 
	}

)
)(	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCompleteTypeSelectionAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompleteTypeSelectionRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getCompleteTypeSelectionAccess().getRefTypeEReferenceCrossReference_3_1_0()); 
	}

)
))?(	otherlv_5='where' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCompleteTypeSelectionAccess().getWhereKeyword_4_0());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCompleteTypeSelectionAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompleteTypeSelectionAccess().getExpressionExpressionParserRuleCall_4_2_0()); 
	    }
		lv_expression_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompleteTypeSelectionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCompleteTypeSelectionAccess().getRightCurlyBracketKeyword_4_3());
    }
)?)
;





// Entry rule entryRuleOtherTypeSelection
entryRuleOtherTypeSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOtherTypeSelectionRule()); }
	 iv_ruleOtherTypeSelection=ruleOtherTypeSelection 
	 { $current=$iv_ruleOtherTypeSelection.current; } 
	 EOF 
;

// Rule OtherTypeSelection
ruleOtherTypeSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOtherTypeSelectionAccess().getOtherTypeSelectionAction_0(),
            $current);
    }
)	otherlv_1='other' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOtherTypeSelectionAccess().getOtherKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherTypeSelectionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getOtherTypeSelectionAccess().getTypeEClassCrossReference_2_0()); 
	}

)
)(	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOtherTypeSelectionAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherTypeSelectionRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getOtherTypeSelectionAccess().getRefTypeEReferenceCrossReference_3_1_0()); 
	}

)
))?(	otherlv_5='where' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOtherTypeSelectionAccess().getWhereKeyword_4_0());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOtherTypeSelectionAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOtherTypeSelectionAccess().getExpressionExpressionParserRuleCall_4_2_0()); 
	    }
		lv_expression_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherTypeSelectionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOtherTypeSelectionAccess().getRightCurlyBracketKeyword_4_3());
    }
)?)
;





// Entry rule entryRuleEachTypeSelection
entryRuleEachTypeSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEachTypeSelectionRule()); }
	 iv_ruleEachTypeSelection=ruleEachTypeSelection 
	 { $current=$iv_ruleEachTypeSelection.current; } 
	 EOF 
;

// Rule EachTypeSelection
ruleEachTypeSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEachTypeSelectionAccess().getEachTypeSelectionAction_0(),
            $current);
    }
)	otherlv_1='each' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEachTypeSelectionAccess().getEachKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEachTypeSelectionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getEachTypeSelectionAccess().getTypeEClassCrossReference_2_0()); 
	}

)
)(	otherlv_3='where' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEachTypeSelectionAccess().getWhereKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEachTypeSelectionAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEachTypeSelectionAccess().getExpressionExpressionParserRuleCall_3_2_0()); 
	    }
		lv_expression_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEachTypeSelectionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEachTypeSelectionAccess().getRightCurlyBracketKeyword_3_3());
    }
)?)
;





// Entry rule entryRuleBooleanType
entryRuleBooleanType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanTypeRule()); }
	 iv_ruleBooleanType=ruleBooleanType 
	 { $current=$iv_ruleBooleanType.current; } 
	 EOF 
;

// Rule BooleanType
ruleBooleanType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBooleanTypeAccess().getSpecificBooleanTypeParserRuleCall_0()); 
    }
    this_SpecificBooleanType_0=ruleSpecificBooleanType
    { 
        $current = $this_SpecificBooleanType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBooleanTypeAccess().getRandomBooleanTypeParserRuleCall_1()); 
    }
    this_RandomBooleanType_1=ruleRandomBooleanType
    { 
        $current = $this_RandomBooleanType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRandomBooleanType
entryRuleRandomBooleanType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomBooleanTypeRule()); }
	 iv_ruleRandomBooleanType=ruleRandomBooleanType 
	 { $current=$iv_ruleRandomBooleanType.current; } 
	 EOF 
;

// Rule RandomBooleanType
ruleRandomBooleanType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRandomBooleanTypeAccess().getRandomBooleanTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomBooleanTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomBooleanTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='random-boolean' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRandomBooleanTypeAccess().getRandomBooleanKeyword_2());
    }
)
;





// Entry rule entryRuleSpecificBooleanType
entryRuleSpecificBooleanType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecificBooleanTypeRule()); }
	 iv_ruleSpecificBooleanType=ruleSpecificBooleanType 
	 { $current=$iv_ruleSpecificBooleanType.current; } 
	 EOF 
;

// Rule SpecificBooleanType
ruleSpecificBooleanType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecificBooleanTypeAccess().getSpecificBooleanTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificBooleanTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificBooleanTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificBooleanTypeAccess().getValueEBooleanParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificBooleanTypeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"EBoolean");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStringType
entryRuleStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringTypeRule()); }
	 iv_ruleStringType=ruleStringType 
	 { $current=$iv_ruleStringType.current; } 
	 EOF 
;

// Rule StringType
ruleStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStringTypeAccess().getSpecificStringTypeParserRuleCall_0()); 
    }
    this_SpecificStringType_0=ruleSpecificStringType
    { 
        $current = $this_SpecificStringType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStringTypeAccess().getRandomStringTypeParserRuleCall_1()); 
    }
    this_RandomStringType_1=ruleRandomStringType
    { 
        $current = $this_RandomStringType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStringTypeAccess().getUpperStringTypeParserRuleCall_2()); 
    }
    this_UpperStringType_2=ruleUpperStringType
    { 
        $current = $this_UpperStringType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStringTypeAccess().getLowerStringTypeParserRuleCall_3()); 
    }
    this_LowerStringType_3=ruleLowerStringType
    { 
        $current = $this_LowerStringType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStringTypeAccess().getCatStartStringTypeParserRuleCall_4()); 
    }
    this_CatStartStringType_4=ruleCatStartStringType
    { 
        $current = $this_CatStartStringType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStringTypeAccess().getCatEndStringTypeParserRuleCall_5()); 
    }
    this_CatEndStringType_5=ruleCatEndStringType
    { 
        $current = $this_CatEndStringType_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStringTypeAccess().getReplaceStringTypeParserRuleCall_6()); 
    }
    this_ReplaceStringType_6=ruleReplaceStringType
    { 
        $current = $this_ReplaceStringType_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRandomStringType
entryRuleRandomStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomStringTypeRule()); }
	 iv_ruleRandomStringType=ruleRandomStringType 
	 { $current=$iv_ruleRandomStringType.current; } 
	 EOF 
;

// Rule RandomStringType
ruleRandomStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRandomStringTypeAccess().getRandomStringTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomStringTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomStringTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='random-string' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRandomStringTypeAccess().getRandomStringKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRandomStringTypeAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomStringTypeAccess().getMinEIntParserRuleCall_4_0()); 
	    }
		lv_min_4_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomStringTypeRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_4_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRandomStringTypeAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomStringTypeAccess().getMaxEIntParserRuleCall_6_0()); 
	    }
		lv_max_6_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomStringTypeRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_6_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRandomStringTypeAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleSpecificStringType
entryRuleSpecificStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecificStringTypeRule()); }
	 iv_ruleSpecificStringType=ruleSpecificStringType 
	 { $current=$iv_ruleSpecificStringType.current; } 
	 EOF 
;

// Rule SpecificStringType
ruleSpecificStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecificStringTypeAccess().getSpecificStringTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificStringTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificStringTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getSpecificStringTypeAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpecificStringTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleUpperStringType
entryRuleUpperStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUpperStringTypeRule()); }
	 iv_ruleUpperStringType=ruleUpperStringType 
	 { $current=$iv_ruleUpperStringType.current; } 
	 EOF 
;

// Rule UpperStringType
ruleUpperStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUpperStringTypeAccess().getUpperStringTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUpperStringTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpperStringTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='upper' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUpperStringTypeAccess().getUpperKeyword_2());
    }
)
;





// Entry rule entryRuleCatStartStringType
entryRuleCatStartStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCatStartStringTypeRule()); }
	 iv_ruleCatStartStringType=ruleCatStartStringType 
	 { $current=$iv_ruleCatStartStringType.current; } 
	 EOF 
;

// Rule CatStartStringType
ruleCatStartStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCatStartStringTypeAccess().getCatStartStringTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCatStartStringTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCatStartStringTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='catstart' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCatStartStringTypeAccess().getCatstartKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCatStartStringTypeAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCatStartStringTypeAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCatStartStringTypeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCatStartStringTypeAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleCatEndStringType
entryRuleCatEndStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCatEndStringTypeRule()); }
	 iv_ruleCatEndStringType=ruleCatEndStringType 
	 { $current=$iv_ruleCatEndStringType.current; } 
	 EOF 
;

// Rule CatEndStringType
ruleCatEndStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCatEndStringTypeAccess().getCatEndStringTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCatEndStringTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCatEndStringTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='catend' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCatEndStringTypeAccess().getCatendKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCatEndStringTypeAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCatEndStringTypeAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCatEndStringTypeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCatEndStringTypeAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleListStringType
entryRuleListStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListStringTypeRule()); }
	 iv_ruleListStringType=ruleListStringType 
	 { $current=$iv_ruleListStringType.current; } 
	 EOF 
;

// Rule ListStringType
ruleListStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListStringTypeAccess().getListStringTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getListStringTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListStringTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getListStringTypeAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListStringTypeAccess().getValueEStringParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListStringTypeRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getListStringTypeAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListStringTypeAccess().getValueEStringParserRuleCall_4_1_0()); 
	    }
		lv_value_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListStringTypeRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getListStringTypeAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleLowerStringType
entryRuleLowerStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLowerStringTypeRule()); }
	 iv_ruleLowerStringType=ruleLowerStringType 
	 { $current=$iv_ruleLowerStringType.current; } 
	 EOF 
;

// Rule LowerStringType
ruleLowerStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLowerStringTypeAccess().getLowerStringTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLowerStringTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLowerStringTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='lower' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLowerStringTypeAccess().getLowerKeyword_2());
    }
)
;





// Entry rule entryRuleReplaceStringType
entryRuleReplaceStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReplaceStringTypeRule()); }
	 iv_ruleReplaceStringType=ruleReplaceStringType 
	 { $current=$iv_ruleReplaceStringType.current; } 
	 EOF 
;

// Rule ReplaceStringType
ruleReplaceStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getReplaceStringTypeAccess().getReplaceStringTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getReplaceStringTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReplaceStringTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='replace' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReplaceStringTypeAccess().getReplaceKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getReplaceStringTypeAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReplaceStringTypeAccess().getOldstringEStringParserRuleCall_4_0()); 
	    }
		lv_oldstring_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReplaceStringTypeRule());
	        }
       		set(
       			$current, 
       			"oldstring",
        		lv_oldstring_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getReplaceStringTypeAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReplaceStringTypeAccess().getNewstringEStringParserRuleCall_6_0()); 
	    }
		lv_newstring_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReplaceStringTypeRule());
	        }
       		set(
       			$current, 
       			"newstring",
        		lv_newstring_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getReplaceStringTypeAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleDoubleType
entryRuleDoubleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleTypeRule()); }
	 iv_ruleDoubleType=ruleDoubleType 
	 { $current=$iv_ruleDoubleType.current; } 
	 EOF 
;

// Rule DoubleType
ruleDoubleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDoubleTypeAccess().getSpecificDoubleTypeParserRuleCall_0()); 
    }
    this_SpecificDoubleType_0=ruleSpecificDoubleType
    { 
        $current = $this_SpecificDoubleType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDoubleTypeAccess().getRandomDoubleTypeParserRuleCall_1()); 
    }
    this_RandomDoubleType_1=ruleRandomDoubleType
    { 
        $current = $this_RandomDoubleType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRandomDoubleType
entryRuleRandomDoubleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomDoubleTypeRule()); }
	 iv_ruleRandomDoubleType=ruleRandomDoubleType 
	 { $current=$iv_ruleRandomDoubleType.current; } 
	 EOF 
;

// Rule RandomDoubleType
ruleRandomDoubleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRandomDoubleTypeAccess().getRandomDoubleTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomDoubleTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomDoubleTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='random-double' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRandomDoubleTypeAccess().getRandomDoubleKeyword_2());
    }
(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRandomDoubleTypeAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomDoubleTypeAccess().getMinEDoubleParserRuleCall_3_1_0()); 
	    }
		lv_min_4_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomDoubleTypeRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_4_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRandomDoubleTypeAccess().getCommaKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomDoubleTypeAccess().getMaxEDoubleParserRuleCall_3_3_0()); 
	    }
		lv_max_6_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomDoubleTypeRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_6_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRandomDoubleTypeAccess().getRightParenthesisKeyword_3_4());
    }
)?)
;





// Entry rule entryRuleSpecificDoubleType
entryRuleSpecificDoubleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecificDoubleTypeRule()); }
	 iv_ruleSpecificDoubleType=ruleSpecificDoubleType 
	 { $current=$iv_ruleSpecificDoubleType.current; } 
	 EOF 
;

// Rule SpecificDoubleType
ruleSpecificDoubleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecificDoubleTypeAccess().getSpecificDoubleTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificDoubleTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificDoubleTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificDoubleTypeAccess().getValueEDoubleParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificDoubleTypeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMinValueType
entryRuleMinValueType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMinValueTypeRule()); }
	 iv_ruleMinValueType=ruleMinValueType 
	 { $current=$iv_ruleMinValueType.current; } 
	 EOF 
;

// Rule MinValueType
ruleMinValueType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMinValueTypeAccess().getOperatorOperatorEnumRuleCall_0_0()); 
	    }
		lv_operator_0_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMinValueTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_0_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='min' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMinValueTypeAccess().getMinKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMinValueTypeAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMinValueTypeRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getMinValueTypeAccess().getAttributeEAttributeCrossReference_3_0()); 
	}

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMinValueTypeAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleMaxValueType
entryRuleMaxValueType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaxValueTypeRule()); }
	 iv_ruleMaxValueType=ruleMaxValueType 
	 { $current=$iv_ruleMaxValueType.current; } 
	 EOF 
;

// Rule MaxValueType
ruleMaxValueType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMaxValueTypeAccess().getOperatorOperatorEnumRuleCall_0_0()); 
	    }
		lv_operator_0_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxValueTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_0_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='max' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMaxValueTypeAccess().getMaxKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMaxValueTypeAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMaxValueTypeRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getMaxValueTypeAccess().getAttributeEAttributeCrossReference_3_0()); 
	}

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMaxValueTypeAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleIntegerType
entryRuleIntegerType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerTypeRule()); }
	 iv_ruleIntegerType=ruleIntegerType 
	 { $current=$iv_ruleIntegerType.current; } 
	 EOF 
;

// Rule IntegerType
ruleIntegerType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIntegerTypeAccess().getSpecificIntegerTypeParserRuleCall_0()); 
    }
    this_SpecificIntegerType_0=ruleSpecificIntegerType
    { 
        $current = $this_SpecificIntegerType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIntegerTypeAccess().getRandomIntegerTypeParserRuleCall_1()); 
    }
    this_RandomIntegerType_1=ruleRandomIntegerType
    { 
        $current = $this_RandomIntegerType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSpecificIntegerType
entryRuleSpecificIntegerType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecificIntegerTypeRule()); }
	 iv_ruleSpecificIntegerType=ruleSpecificIntegerType 
	 { $current=$iv_ruleSpecificIntegerType.current; } 
	 EOF 
;

// Rule SpecificIntegerType
ruleSpecificIntegerType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecificIntegerTypeAccess().getSpecificIntegerTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificIntegerTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificIntegerTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificIntegerTypeAccess().getValueEIntParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificIntegerTypeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRandomIntegerType
entryRuleRandomIntegerType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomIntegerTypeRule()); }
	 iv_ruleRandomIntegerType=ruleRandomIntegerType 
	 { $current=$iv_ruleRandomIntegerType.current; } 
	 EOF 
;

// Rule RandomIntegerType
ruleRandomIntegerType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRandomIntegerTypeAccess().getRandomIntegerTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomIntegerTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomIntegerTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='random-int' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRandomIntegerTypeAccess().getRandomIntKeyword_2());
    }
(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRandomIntegerTypeAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomIntegerTypeAccess().getMinEIntParserRuleCall_3_1_0()); 
	    }
		lv_min_4_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomIntegerTypeRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_4_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRandomIntegerTypeAccess().getCommaKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomIntegerTypeAccess().getMaxEIntParserRuleCall_3_3_0()); 
	    }
		lv_max_6_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomIntegerTypeRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_6_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRandomIntegerTypeAccess().getRightParenthesisKeyword_3_4());
    }
)?)
;





// Entry rule entryRuleRandomType
entryRuleRandomType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomTypeRule()); }
	 iv_ruleRandomType=ruleRandomType 
	 { $current=$iv_ruleRandomType.current; } 
	 EOF 
;

// Rule RandomType
ruleRandomType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRandomTypeAccess().getRandomTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='random' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRandomTypeAccess().getRandomKeyword_2());
    }
)
;





// Entry rule entryRuleRandomDoubleNumberType
entryRuleRandomDoubleNumberType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomDoubleNumberTypeRule()); }
	 iv_ruleRandomDoubleNumberType=ruleRandomDoubleNumberType 
	 { $current=$iv_ruleRandomDoubleNumberType.current; } 
	 EOF 
;

// Rule RandomDoubleNumberType
ruleRandomDoubleNumberType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRandomDoubleNumberTypeAccess().getOperatorOperatorEnumRuleCall_0_0()); 
	    }
		lv_operator_0_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomDoubleNumberTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_0_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='random' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRandomDoubleNumberTypeAccess().getRandomKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRandomDoubleNumberTypeAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomDoubleNumberTypeAccess().getMinEDoubleParserRuleCall_3_0()); 
	    }
		lv_min_3_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomDoubleNumberTypeRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_3_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRandomDoubleNumberTypeAccess().getCommaKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRandomDoubleNumberTypeAccess().getObjectObSelectionStrategyParserRuleCall_5_0_0()); 
	    }
		lv_object_5_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomDoubleNumberTypeRule());
	        }
       		set(
       			$current, 
       			"object",
        		lv_object_5_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='.' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRandomDoubleNumberTypeAccess().getFullStopKeyword_5_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRandomDoubleNumberTypeRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getRandomDoubleNumberTypeAccess().getMaxEAttributeCrossReference_6_0()); 
	}

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRandomDoubleNumberTypeAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleRandomIntegerNumberType
entryRuleRandomIntegerNumberType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomIntegerNumberTypeRule()); }
	 iv_ruleRandomIntegerNumberType=ruleRandomIntegerNumberType 
	 { $current=$iv_ruleRandomIntegerNumberType.current; } 
	 EOF 
;

// Rule RandomIntegerNumberType
ruleRandomIntegerNumberType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRandomIntegerNumberTypeAccess().getOperatorOperatorEnumRuleCall_0_0()); 
	    }
		lv_operator_0_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomIntegerNumberTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_0_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='random' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRandomIntegerNumberTypeAccess().getRandomKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRandomIntegerNumberTypeAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomIntegerNumberTypeAccess().getMinEIntParserRuleCall_3_0()); 
	    }
		lv_min_3_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomIntegerNumberTypeRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_3_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRandomIntegerNumberTypeAccess().getCommaKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRandomIntegerNumberTypeAccess().getObjectObSelectionStrategyParserRuleCall_5_0_0()); 
	    }
		lv_object_5_0=ruleObSelectionStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomIntegerNumberTypeRule());
	        }
       		set(
       			$current, 
       			"object",
        		lv_object_5_0, 
        		"ObSelectionStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='.' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRandomIntegerNumberTypeAccess().getFullStopKeyword_5_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRandomIntegerNumberTypeRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getRandomIntegerNumberTypeAccess().getMaxEAttributeCrossReference_6_0()); 
	}

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRandomIntegerNumberTypeAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleListType
entryRuleListType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListTypeRule()); }
	 iv_ruleListType=ruleListType 
	 { $current=$iv_ruleListType.current; } 
	 EOF 
;

// Rule ListType
ruleListType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListTypeAccess().getListTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getListTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getListTypeAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getListTypeRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getListTypeAccess().getValueEObjectCrossReference_3_0()); 
	}

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getListTypeAccess().getCommaKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getListTypeRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getListTypeAccess().getValueEObjectCrossReference_4_1_0()); 
	}

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getListTypeAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleObjectAttributeType
entryRuleObjectAttributeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectAttributeTypeRule()); }
	 iv_ruleObjectAttributeType=ruleObjectAttributeType 
	 { $current=$iv_ruleObjectAttributeType.current; } 
	 EOF 
;

// Rule ObjectAttributeType
ruleObjectAttributeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getObjectAttributeTypeAccess().getObjectAttributeTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectAttributeTypeAccess().getOperatorOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectAttributeTypeRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectAttributeTypeRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getObjectAttributeTypeAccess().getObjSelObjectEmitterCrossReference_2_0()); 
	}

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getObjectAttributeTypeAccess().getFullStopKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectAttributeTypeRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getObjectAttributeTypeAccess().getAttributeEAttributeCrossReference_4_0()); 
	}

)
))
;





// Entry rule entryRuleMaxCardinality
entryRuleMaxCardinality returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaxCardinalityRule()); } 
	 iv_ruleMaxCardinality=ruleMaxCardinality 
	 { $current=$iv_ruleMaxCardinality.current.getText(); }  
	 EOF 
;

// Rule MaxCardinality
ruleMaxCardinality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMaxCardinalityAccess().getEIntParserRuleCall_0()); 
    }
    this_EInt_0=ruleEInt    {
		$current.merge(this_EInt_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMaxCardinalityAccess().getAsteriskKeyword_1()); 
    }
)
    ;





// Rule LogicOperator
ruleLogicOperator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='and' 
	{
        $current = grammarAccess.getLogicOperatorAccess().getAndEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLogicOperatorAccess().getAndEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='or' 
	{
        $current = grammarAccess.getLogicOperatorAccess().getOrEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLogicOperatorAccess().getOrEnumLiteralDeclaration_1()); 
    }
));



// Rule Operator
ruleOperator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='=' 
	{
        $current = grammarAccess.getOperatorAccess().getEqualsEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getOperatorAccess().getEqualsEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='<>' 
	{
        $current = grammarAccess.getOperatorAccess().getDifferentEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getOperatorAccess().getDifferentEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='in' 
	{
        $current = grammarAccess.getOperatorAccess().getInEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getOperatorAccess().getInEnumLiteralDeclaration_2()); 
    }
));



// Rule ArithmeticOperator
ruleArithmeticOperator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='+' 
	{
        $current = grammarAccess.getArithmeticOperatorAccess().getAddEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getArithmeticOperatorAccess().getAddEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='-' 
	{
        $current = grammarAccess.getArithmeticOperatorAccess().getSubtractEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getArithmeticOperatorAccess().getSubtractEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='*' 
	{
        $current = grammarAccess.getArithmeticOperatorAccess().getMultiplyEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getArithmeticOperatorAccess().getMultiplyEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='/' 
	{
        $current = grammarAccess.getArithmeticOperatorAccess().getDivideEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getArithmeticOperatorAccess().getDivideEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='%' 
	{
        $current = grammarAccess.getArithmeticOperatorAccess().getModuleEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getArithmeticOperatorAccess().getModuleEnumLiteralDeclaration_4()); 
    }
));



// Rule Repeat
ruleRepeat returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='yes' 
	{
        $current = grammarAccess.getRepeatAccess().getYesEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getRepeatAccess().getYesEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='no' 
	{
        $current = grammarAccess.getRepeatAccess().getNoEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getRepeatAccess().getNoEnumLiteralDeclaration_1()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


