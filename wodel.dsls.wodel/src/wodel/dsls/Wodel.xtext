// automatically generated by Xtext
grammar wodel.dsls.Wodel with org.eclipse.xtext.common.Terminals

//import "http://mutatorenvironment/1.0"
import "platform:/resource/wodel.models/models/MutatorEnvironment.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

MutatorEnvironment returns MutatorEnvironment:
	(load+=Load)*
	definition=Definition
	'with'
	('blocks' '{' blocks+=Block (blocks+=Block)* '}'
		| 'commands' '{' commands+=Mutator (commands+=Mutator)* '}')
	('constraints' '{' constraints+= Constraint (constraints+=Constraint)* '}')?;
	
Definition returns Definition: 
	Library | Program;

Library returns Library:
	{Library}
	'library' 'for' 'metamodel' metamodel=EString					
	;

Program returns Program:
	{Program}
	'generate' (num=EInt)? 'mutants'
	'in' output=EString	
	'from' source=Source 
	'metamodel' metamodel=EString
	;

Source returns Source:
	{Source}
	path=EString /*(multiple?='all')?*/
;

Block returns Block:
	name=ID ('from' from+=[Block|ID] (',' from+=[Block|ID])*)? ('repeat' '=' repeat=Repeat)? '{' commands+=Mutator (commands+=Mutator)* '}' ('[' (min=EInt '..' max=MaxCardinality | fixed=EInt) ']')?
;

Constraint returns Constraint:
	'context' type=[ecore::EClass|ID] id=EString ':' rule=EString
;

Mutator returns Mutator:
	CreateObjectMutator | SelectObjectMutator | SelectSampleMutator | CompositeMutator | ModifySourceReferenceMutator | ModifyTargetReferenceMutator
	 | CreateReferenceMutator | RemoveObjectMutator | RemoveReferenceMutator | ModifyInformationMutator | CloneObjectMutator;

ObSelectionStrategy returns ObSelectionStrategy:
	RandomSelection | SpecificSelection | CompleteSelection | OtherSelection;
	
RandomSelection returns RandomSelection:
	RandomTypeSelection;
	
SpecificSelection returns SpecificSelection:
	SpecificObjectSelection | SpecificClosureSelection;
	
CompleteSelection returns CompleteSelection:
	CompleteTypeSelection;
	
OtherSelection returns OtherSelection:
	OtherTypeSelection;

AttributeEvaluationType returns AttributeEvaluationType:
	AttributeType | ObjectAttributeType
;

AttributeType returns AttributeType:
	NumberType | BooleanType | StringType | ListStringType | RandomType | ListType;
	
NumberType returns NumberType:
	IntegerType | DoubleType | MinValueType | MaxValueType | RandomNumberType
;

RandomNumberType returns RandomNumberType:
	RandomDoubleNumberType | RandomIntegerNumberType
;
	
Load returns Load:
	{Load}
	'import' file=EString
	;

EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;
	
EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	
EBoolean returns ecore::EBoolean:
	("true" | "false");
	
enum LogicOperator returns LogicOperator:
	and = 'and' | or = 'or'
;

enum Operator returns Operator:
	equals = '=' | different = '<>' | in = 'in'
;

enum ArithmeticOperator returns ArithmeticOperator:
	add = '+' | subtract = '-' | multiply = '*' | divide = '/' | module = '%'
;

enum Repeat returns Repeat:
	yes = 'yes' | no = 'no'	
;

enum SampleClause returns SampleClause:
	equals = 'equals' | distinct = 'distinct'
;
	
BinaryOperator returns BinaryOperator:
	{BinaryOperator}
	type = LogicOperator
;

AttributeEvaluation returns AttributeEvaluation:
	{AttributeEvaluation}
	name=[ecore::EAttribute|ID]
	value=AttributeEvaluationType
;

ReferenceEvaluation returns ReferenceEvaluation:
	{ReferenceEvaluation}
	(name=[ecore::EReference|ID] | 'self') ('->' refName=[ecore::EReference|ID])?
	operator=Operator
	(value=ObSelectionStrategy | 'null')
;

Evaluation returns Evaluation:
	AttributeEvaluation | ReferenceEvaluation
;

Expression returns Expression:
	{Expression}
	first=Evaluation (operator+=BinaryOperator second+=Evaluation)*
;

/*
RemoveObjectMutator returns RemoveObjectMutator:	
	'remove' object=ObSelectionStrategy
	('[' (min=EInt '..')? max=MaxCardinality ']')?
	;
	
RemoveReferenceMutator returns RemoveReferenceMutator:	
	'remove' 'reference' refType=[ecore::EReference|ID]
	'in' container=ObSelectionStrategy
	('[' (min=EInt '..')? max=MaxCardinality ']')?
	;	
*/
 	
RemoveObjectMutator returns RemoveObjectMutator:
	{RemoveObjectMutator}	
	'remove' object=ObSelectionStrategy ('from' container=ObSelectionStrategy)?
	('[' (min=EInt '..')? max=MaxCardinality ']')?
;
	
RemoveReferenceMutator returns RemoveReferenceMutator:
	RemoveRandomReferenceMutator | RemoveSpecificReferenceMutator | RemoveCompleteReferenceMutator;
	
RemoveRandomReferenceMutator returns RemoveRandomReferenceMutator:
	{RemoveRandomReferenceMutator}
	'remove' 'one' 'reference' refType=[ecore::EReference|ID]
	'in' type=[ecore::EClass|ID]
	('[' (min=EInt '..')? max=MaxCardinality ']')?
	;	

RemoveSpecificReferenceMutator returns RemoveSpecificReferenceMutator:
	{RemoveSpecificReferenceMutator}
	'remove' 'reference' refType=[ecore::EReference|ID]
	'in' container=ObSelectionStrategy
	('[' (min=EInt '..')? max=MaxCardinality ']')?
	;
RemoveCompleteReferenceMutator returns RemoveCompleteReferenceMutator:
	{RemoveCompleteReferenceMutator}
	'remove' 'all' 'reference' refType=[ecore::EReference|ID]
	'in' type=[ecore::EClass|ID]
;
CreateObjectMutator returns CreateObjectMutator:	
	(name=ID '=')? 'create' type=[ecore::EClass|ID] 	 
	('in' container=ObSelectionStrategy)?
	('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
	('[' (min=EInt '..')? max=MaxCardinality ']')?
	;

SelectObjectMutator returns SelectObjectMutator:
	name=ID '=' 'select' object=ObSelectionStrategy
	('in' container=ObSelectionStrategy)?
	;
	
SelectSampleMutator returns SelectSampleMutator:
	name=ID '=' 'select' 'sample'
	'from' object=ObSelectionStrategy
	('with' clause=SampleClause
	'{' (features+=[ecore::EStructuralFeature|ID])? ("," features+=[ecore::EStructuralFeature|ID])* '}' )?
;

ModifyInformationMutator returns ModifyInformationMutator:
	(name=ID '=')? 'modify' object=ObSelectionStrategy	
	('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
	('[' (min=EInt '..')? max=MaxCardinality ']')?
	;
	
CreateReferenceMutator returns CreateReferenceMutator:
	(name=ID '=')? 'create' 'reference' refType=[ecore::EReference|ID]
	('to' target=ObSelectionStrategy)?
	('in' source=ObSelectionStrategy)?	
	('[' (min=EInt '..')? max=MaxCardinality ']')?
	;
	
ModifySourceReferenceMutator returns ModifySourceReferenceMutator:
	'modify' 'source' refType=[ecore::EReference|ID] 	 
	('from' source=ObSelectionStrategy)?
	('to' newSource=ObSelectionStrategy)?	
	('[' (min=EInt '..')? max=MaxCardinality ']')?	
	;

ModifyTargetReferenceMutator returns ModifyTargetReferenceMutator:
	'modify' 'target' refType=[ecore::EReference|ID] 	 
	('from' source=ObSelectionStrategy)?
	('to' newTarget=ObSelectionStrategy)?	
	('[' (min=EInt '..')? max=MaxCardinality ']')?	
	;

CompositeMutator returns CompositeMutator:
	(name=ID '=')? '['
	commands+=Mutator (commands+=Mutator)*
	']'
	('[' (min=EInt '..' max=MaxCardinality | fixed=EInt) ']')?	
	;

CloneObjectMutator returns CloneObjectMutator:	
	(name=ID '=')? 'clone' (contents?='contents')? object=ObSelectionStrategy 	 
	('in' container=ObSelectionStrategy)?
	('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
	('[' (min=EInt '..')? max=MaxCardinality ']')?
	;

AttributeSet returns AttributeSet:
	AttributeScalar | AttributeUnset | AttributeSwap | AttributeCopy | AttributeReverse | AttributeOperation
;

AttributeScalar returns AttributeScalar:
	attribute+=[ecore::EAttribute|ID]
	value=AttributeType
	;
	
AttributeUnset returns AttributeUnset:
	'unset' '(' attribute+=[ecore::EAttribute|ID] ')'
;

AttributeSwap returns AttributeSwap:
	'swap' '(' attribute+=[ecore::EAttribute|ID] ',' (object=ObSelectionStrategy '.')? attribute+=[ecore::EAttribute|ID] ')'
;

AttributeCopy returns AttributeCopy:
	'copy' '(' attribute+=[ecore::EAttribute|ID] ',' (object=ObSelectionStrategy '.')? attribute+=[ecore::EAttribute|ID] ')'
;

AttributeReverse returns AttributeReverse:
	'reverse' '(' attribute+=[ecore::EAttribute|ID] ')'
;

AttributeOperation returns AttributeOperation:
	attribute+=[ecore::EAttribute|ID] operator=ArithmeticOperator value=AttributeEvaluationType
;

ReferenceSet returns ReferenceSet:
	ReferenceInit | ReferenceSwap | ReferenceAtt
;

ReferenceInit returns ReferenceInit:
	reference+=[ecore::EReference|ID]
	'=' object=ObSelectionStrategy
;

ReferenceSwap returns ReferenceSwap:
	'swapref' '(' reference+=[ecore::EReference|ID] ',' (object=ObSelectionStrategy '->')? reference+=[ecore::EReference|ID] ')'
;

ReferenceAtt returns ReferenceAtt:
	reference+=[ecore::EReference|ID] '.' attribute=[ecore::EAttribute|ID]
	value=AttributeType
;

RandomTypeSelection returns RandomTypeSelection:
	{RandomTypeSelection}
	'one' type=[ecore::EClass|ID] ('->' refType=[ecore::EReference|ID])?
	('where' '{' expression=Expression '}')?
	;

SpecificObjectSelection returns SpecificObjectSelection:
	{SpecificObjectSelection}
	objSel=[ObjectEmitter|ID] ('->' refType=[ecore::EReference|ID])?
	('where' '{' expression=Expression '}')?
	;
	
SpecificClosureSelection returns SpecificClosureSelection:
	{SpecificClosureSelection}
	'closure' '(' objSel=[ObjectEmitter|ID] ('->' refType=[ecore::EReference|ID])? ')'
	('where' '{' expression=Expression '}')?
	;

CompleteTypeSelection returns CompleteTypeSelection:
	{CompleteTypeSelection}
	'all' type=[ecore::EClass|ID] ('->' refType=[ecore::EReference|ID])?
	('where' '{' expression=Expression '}')?
;

OtherTypeSelection returns OtherTypeSelection:
	{OtherTypeSelection}
	'other' type=[ecore::EClass|ID] ('->' refType=[ecore::EReference|ID])?
	('where' '{' expression=Expression '}')?
;

BooleanType returns BooleanType:
	SpecificBooleanType | RandomBooleanType 
	;

RandomBooleanType returns RandomBooleanType:
	{RandomBooleanType}
	operator=Operator
 	'random-boolean'
;

SpecificBooleanType returns SpecificBooleanType:
	{SpecificBooleanType}
	operator=Operator
	value=EBoolean
	;
StringType returns StringType:
	SpecificStringType | RandomStringType | UpperStringType | LowerStringType | CatStartStringType | CatEndStringType | ReplaceStringType
	;

RandomStringType returns RandomStringType :
	{RandomStringType}
	operator=Operator
	'random-string' '(' min=EInt ',' max=EInt ')'
;

SpecificStringType returns SpecificStringType:
	{SpecificStringType}
	operator=Operator
	value=STRING
	;

UpperStringType returns UpperStringType:
	{UpperStringType}
	operator=Operator
	'upper'
;

CatStartStringType returns CatStartStringType:
	{CatStartStringType}
	operator=Operator
	'catstart' '('value=EString')'
;

CatEndStringType returns CatEndStringType:
	{CatEndStringType}
	operator=Operator
	'catend' '('value=EString')'
;

ListStringType returns ListStringType:
	{ListStringType}
	operator=Operator
	'['value+=EString ( "," value+=EString)*']'
;
LowerStringType returns LowerStringType:
	{LowerStringType}
	operator=Operator
	'lower'
;

ReplaceStringType returns ReplaceStringType:
	{ReplaceStringType}
	operator=Operator
	'replace' '(' oldstring=EString ',' newstring=EString ')'
;

DoubleType returns DoubleType:
	SpecificDoubleType | RandomDoubleType
	;

RandomDoubleType returns RandomDoubleType :
	{RandomDoubleType}
	operator=Operator
	'random-double' ('(' min=EDouble ',' max=EDouble ')')?
;

SpecificDoubleType returns SpecificDoubleType:
	{SpecificDoubleType}
	operator=Operator
	value=EDouble
	;
	
MinValueType returns MinValueType:
	operator=Operator
	'min' '(' attribute=[ecore::EAttribute|ID] ')'
;

MaxValueType returns MaxValueType:
	operator=Operator
	'max' '(' attribute=[ecore::EAttribute|ID] ')'
;

IntegerType returns IntegerType:
	SpecificIntegerType | RandomIntegerType
	;

SpecificIntegerType returns SpecificIntegerType:
	{SpecificIntegerType}
	operator=Operator
	value=EInt
	;

RandomIntegerType returns RandomIntegerType:
	{RandomIntegerType}
	operator=Operator
	'random-int' ('(' min=EInt ',' max=EInt ')')?
;

RandomType returns RandomType:
	{RandomType}
	operator=Operator
	'random'
;

RandomDoubleNumberType returns RandomDoubleNumberType:
	operator=Operator
	'random' '(' min=EDouble ',' (object = ObSelectionStrategy '.')? max=[ecore::EAttribute|ID] ')'
;

RandomIntegerNumberType returns RandomIntegerNumberType:
	operator=Operator
	'random' '(' min=EInt ',' (object = ObSelectionStrategy '.')? max=[ecore::EAttribute|ID] ')'
;

ListType returns ListType:
	{ListType}
	operator=Operator
	'{'value+=[ecore::EObject] ( "," value+=[ecore::EObject])*'}'
;

ObjectAttributeType returns ObjectAttributeType:
	{ObjectAttributeType}
	operator=Operator
	objSel=[ObjectEmitter|ID] '.' attribute=[ecore::EAttribute|ID]
;


MaxCardinality returns ecore::EIntegerObject: EInt | '*';
